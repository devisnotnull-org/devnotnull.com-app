{"remainingRequest":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js!/Users/alexbrown/Development/fandanzle-v2/src/server/ssr.tsx","dependencies":[{"path":"/Users/alexbrown/Development/fandanzle-v2/src/server/ssr.tsx","mtime":1583683344105},{"path":"/Users/alexbrown/Development/fandanzle-v2/.babelrc","mtime":1575409032754},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/cache-loader/dist/cjs.js","mtime":1583684819619},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js","mtime":1575412165599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvYWxleGJyb3duL0RldmVsb3BtZW50L2ZhbmRhbnpsZS12Mi9zcmMvc2VydmVyL3Nzci50c3giOwoKLyogZXNsaW50IGdsb2JhbC1yZXF1aXJlOiAwICovCi8vIExpYnJhcmllcwppbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnOwppbXBvcnQgeyByZW5kZXJUb1N0cmluZyB9IGZyb20gJ3JlYWN0LWRvbS9zZXJ2ZXInOwppbXBvcnQgY3JlYXRlSGlzdG9yeSBmcm9tICdoaXN0b3J5L2NyZWF0ZU1lbW9yeUhpc3RvcnknOwppbXBvcnQgeyBQcm92aWRlciB9IGZyb20gJ3JlYWN0LXJlZHV4JzsKaW1wb3J0IHsgU3RhdGljUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyJzsKaW1wb3J0IHsgZXhpc3RzU3luYywgcmVhZEZpbGVTeW5jIH0gZnJvbSAnZnMnOyAvLwoKaW1wb3J0IEFwcCBmcm9tICcuLi93ZWIvYXBwJzsgLy8gQ29tcG9uZW50cwoKaW1wb3J0IEh0bWwgZnJvbSAnLi4vd2ViL2NvbW1vbi9odG1sL2h0bWwnOyAvLyBSZWR1eAoKaW1wb3J0IGNyZWF0ZVN0b3JlIGZyb20gJy4uL2NvcmUvc3RvcmUnOwppbXBvcnQgcm9vdFNhZ2EgZnJvbSAnLi4vY29yZS9zYWdhcyc7CnZhciBtYW5pZmVzdCA9IHt9OyAvLyBUaGlzIGlzIG9ubHkgcHJvY2Vzc2VkIHdoZW4gdGhlcmUgaXMgYSBwYWdlIHJlcXVlc3QgCgp0cnkgewogIGlmIChleGlzdHNTeW5jKCIiLmNvbmNhdChfX2Rpcm5hbWUsICIvYXNzZXQtbWFuaWZlc3QuanNvbiIpKSkgewogICAgdmFyIHJlID0gcmVhZEZpbGVTeW5jKCIiLmNvbmNhdChfX2Rpcm5hbWUsICIvYXNzZXQtbWFuaWZlc3QuanNvbiIpKS50b1N0cmluZygpOwogICAgbWFuaWZlc3QgPSBKU09OLnBhcnNlKHJlKTsKICB9IGVsc2UgewogICAgY29uc29sZS5sb2coJ1RoZSBmaWxlIGRvZXMgbm90IGV4aXN0LicpOwogIH0KfSBjYXRjaCAoZXJyKSB7CiAgY29uc29sZS5lcnJvcihlcnIpOwp9Ci8qKgogKiAKICogQHBhcmFtIHVybCAKICogQHBhcmFtIHN0b3JlIAogKiBAcGFyYW0gYXNzZXRzIAogKiBAcGFyYW0gcmVzIAogKi8KCgp2YXIgcmVuZGVyQXBwID0gZnVuY3Rpb24gcmVuZGVyQXBwKHVybCwgc3RvcmUpIHsKICB2YXIgcmVzcG9uc2UgPSAiIjsgLy8gCgogIHZhciBQUk9EID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJzsKICB2YXIgY29udGV4dCA9IHsKICAgIHNwbGl0UG9pbnRzOiBbXQogIH07IC8vIAoKICB2YXIgcm9vdENvbXBvbmVudCA9IFBST0QgPyBSZWFjdC5jcmVhdGVFbGVtZW50KFByb3ZpZGVyLCB7CiAgICBzdG9yZTogc3RvcmUsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1OAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU3RhdGljUm91dGVyLCB7CiAgICBsb2NhdGlvbjogdXJsLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNTkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KEFwcCwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNjAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSkpIDogbnVsbDsgLy8gRmV0Y2ggYWxsIHJlc291cmNlcyBmb3Igcm9vdCBzYWdhCgogIHN0b3JlLnJ1blNhZ2Eocm9vdFNhZ2EpLnRvUHJvbWlzZSgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgLy8gR2V0IHN0YXRlIGZyb20gc3RvcmUgYWZ0ZXIgc2FnYXMgd2VyZSBydW4gYW5kIHN0cmlnaWZ5IGl0IGZvciByZW5kZXJpbmcgaW4gSFRNTAogICAgdmFyIHN0YXRlID0gc3RvcmUuZ2V0U3RhdGUoKTsKICAgIHZhciBpbml0aWFsU3RhdGUgPSAid2luZG93Ll9fSU5JVElBTF9TVEFURV9fID0gIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkoc3RhdGUpKTsKICAgIHZhciBzcGxpdFBvaW50cyA9ICJ3aW5kb3cuX19TUExJVF9QT0lOVFNfXyA9ICIuY29uY2F0KEpTT04uc3RyaW5naWZ5KGNvbnRleHQuc3BsaXRQb2ludHMpKTsKICAgIHZhciBodG1sID0gcmVuZGVyVG9TdHJpbmcoUmVhY3QuY3JlYXRlRWxlbWVudChIdG1sLCB7CiAgICAgIFBST0Q6IFBST0QsCiAgICAgIGFzc2V0czogbWFuaWZlc3QsCiAgICAgIHJvb3RDb21wb25lbnQ6IHJvb3RDb21wb25lbnQsCiAgICAgIGluaXRpYWxTdGF0ZTogaW5pdGlhbFN0YXRlLAogICAgICBzcGxpdFBvaW50czogc3BsaXRQb2ludHMsCiAgICAgIF9fc291cmNlOiB7CiAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICBsaW5lTnVtYmVyOiA3MwogICAgICB9LAogICAgICBfX3NlbGY6IHRoaXMKICAgIH0pKTsKICAgIHJlc3BvbnNlID0gaHRtbDsKICB9KTsgLy8gRG8gZmlyc3QgcmVuZGVyLCB0cmlnZ2VyIHNhZ2FzIGZvciBjb21wb25lbnQgdG8gcnVuCgogIGlmIChQUk9EKSByZXNwb25zZSA9IHJlbmRlclRvU3RyaW5nKHJvb3RDb21wb25lbnQpOyAvLyBEaXNwYXRjaCBhIGNsb3NlIGV2ZW50IHNvIHNhZ2FzIHN0b3AgbGlzdGVuaW5nIGFmdGVyIHRoZXkncmUgcmVzb2x2ZWQKCiAgc3RvcmUuY2xvc2VTYWdhcygpOyAvLwoKICByZXR1cm4gcmVzcG9uc2U7Cn07Ci8qKgogKiAKICogQHBhcmFtIHJlcSAKICogQHBhcmFtIHJlcyAKICovCgoKZXhwb3J0IHZhciByZW5kZXJQYWdlU2VydmVybGVzcyA9IGZ1bmN0aW9uIHJlbmRlclBhZ2VTZXJ2ZXJsZXNzKHJlcSkgewogIHZhciBoaXN0b3J5ID0gY3JlYXRlSGlzdG9yeSgpOwogIHZhciBzdG9yZSA9IGNyZWF0ZVN0b3JlKGhpc3RvcnkpOwogIHJldHVybiByZW5kZXJBcHAocmVxLCBzdG9yZSk7Cn07Ci8qKgogKiAKICogQHBhcmFtIHJlcSAKICogQHBhcmFtIHJlcyAKICovCgpleHBvcnQgdmFyIHJlbmRlclBhZ2VFeHByZXNzID0gZnVuY3Rpb24gcmVuZGVyUGFnZUV4cHJlc3MocmVxKSB7CiAgdmFyIGhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KCk7CiAgdmFyIHN0b3JlID0gY3JlYXRlU3RvcmUoaGlzdG9yeSk7CiAgcmV0dXJuIHJlbmRlckFwcChyZXEudXJsLCBzdG9yZSk7Cn07Ci8qKgogKiAKICogQHBhcmFtIHJlcSAKICogQHBhcmFtIHJlcyAKICovCgpleHBvcnQgdmFyIHJlbmRlckRldlBhZ2VFeHByZXNzID0gZnVuY3Rpb24gcmVuZGVyRGV2UGFnZUV4cHJlc3MocmVxKSB7CiAgdmFyIGhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KCk7CiAgdmFyIHN0b3JlID0gY3JlYXRlU3RvcmUoaGlzdG9yeSk7CiAgcmV0dXJuIHJlbmRlckFwcChyZXEudXJsLCBzdG9yZSk7Cn07"},{"version":3,"sources":["/Users/alexbrown/Development/fandanzle-v2/src/server/ssr.tsx"],"names":["React","renderToString","createHistory","Provider","StaticRouter","existsSync","readFileSync","App","Html","createStore","rootSaga","manifest","__dirname","re","toString","JSON","parse","console","log","err","error","renderApp","url","store","response","PROD","process","env","NODE_ENV","context","splitPoints","rootComponent","runSaga","toPromise","then","state","getState","initialState","stringify","html","closeSagas","renderPageServerless","req","history","renderPageExpress","renderDevPageExpress"],"mappings":"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","sourcesContent":["/* eslint global-require: 0 */\n\nimport { Store } from 'redux';\n\n// Libraries\nimport React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport createHistory from 'history/createMemoryHistory';\nimport { Provider } from 'react-redux';\nimport { StaticRouter } from 'react-router';\nimport { Request, Response } from 'express';\nimport { Callback, APIGatewayEvent } from 'aws-lambda';\n\nimport { existsSync, readFileSync } from 'fs';\n\n//\nimport App from '../web/app'\n\n// Components\nimport Html from '../web/common/html/html';\n\n// Redux\nimport createStore from '../core/store';\nimport rootSaga from '../core/sagas';\n\nlet manifest: any = {};\n\n// This is only processed when there is a page request \ntry {\n    if(existsSync(`${__dirname}/asset-manifest.json`)) {\n        const re = readFileSync(`${__dirname}/asset-manifest.json`).toString();\n        manifest = JSON.parse(re);\n    } else {\n        console.log('The file does not exist.');\n    }\n} catch (err) {\n    console.error(err);\n}\n\n/**\n * \n * @param url \n * @param store \n * @param assets \n * @param res \n */\nconst renderApp = (url: string, store: Store): string => {\n\n    let response: string = \"\";\n    // \n    const PROD = process.env.NODE_ENV === 'production';\n    const context = {\n        splitPoints: []\n    };\n\n    // \n    const rootComponent = PROD\n    ? (<Provider store={store}>\n        <StaticRouter location={url}>\n            <App />\n        </StaticRouter>\n    </Provider>)\n    : null;\n\n    // Fetch all resources for root saga\n    (store as any).runSaga(rootSaga).toPromise().then(() => {\n        // Get state from store after sagas were run and strigify it for rendering in HTML\n        const state = store.getState();\n        const initialState = `window.__INITIAL_STATE__ = ${JSON.stringify(state)}`;\n        const splitPoints = `window.__SPLIT_POINTS__ = ${JSON.stringify(context.splitPoints)}`;\n\n        const html = renderToString(\n            <Html\n                PROD={PROD}\n                assets={manifest}\n                rootComponent={rootComponent}\n                initialState={initialState}\n                splitPoints={splitPoints}\n            />\n        );\n        response = html;\n    });\n\n    // Do first render, trigger sagas for component to run\n    if (PROD) response = renderToString(rootComponent);\n\n    // Dispatch a close event so sagas stop listening after they're resolved\n    (store as any).closeSagas();\n    \n    //\n    return response;\n}\n\n/**\n * \n * @param req \n * @param res \n */\nexport const renderPageServerless = (req: string): string => {\n    const history = createHistory();\n    const store = createStore(history);\n    return renderApp(req, store);\n};\n\n/**\n * \n * @param req \n * @param res \n */\nexport const renderPageExpress = (req: Request): string => {\n    const history = createHistory();\n    const store = createStore(history);\n    return renderApp(req.url, store);\n};\n\n/**\n * \n * @param req \n * @param res \n */\nexport const renderDevPageExpress = (req: Request): string => {\n    const history = createHistory();\n    const store = createStore(history);\n    return renderApp(req.url, store);\n};\n"]}]}