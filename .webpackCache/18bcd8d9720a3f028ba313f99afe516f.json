{"remainingRequest":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js!/Users/alexbrown/Development/fandanzle-v2/src/core/metadata/reducer.ts","dependencies":[{"path":"/Users/alexbrown/Development/fandanzle-v2/src/core/metadata/reducer.ts","mtime":1576192411606},{"path":"/Users/alexbrown/Development/fandanzle-v2/.babelrc","mtime":1575409032754},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/cache-loader/dist/cjs.js","mtime":1583684819619},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js","mtime":1575412165599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2FsZXhicm93bi9EZXZlbG9wbWVudC9mYW5kYW56bGUtdjIvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZCI7CmltcG9ydCB7IE1ldGFkYXRhQWN0aW9uVHlwZXMgfSBmcm9tICcuL2FjdGlvbnMnOwp2YXIgaW5pdGlhbFN0YXRlID0gewogIGVycm9yczogdW5kZWZpbmVkLAogIGxvYWRpbmc6IGZhbHNlLAogIHRpdGxlOiAnJywKICBibHVyYjogJycsCiAgc3VtbWFyeTogJycsCiAgZmF2aWNvbjoge30sCiAgcHJpbWFyeUltYWdlOiB7fSwKICBzZWNvbmRhcnlJbWFnZToge30KfTsKZXhwb3J0IHZhciBibG9nID0gZnVuY3Rpb24gYmxvZygpIHsKICB2YXIgc3RhdGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGluaXRpYWxTdGF0ZTsKICB2YXIgYWN0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7CgogIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHsKICAgIGNhc2UgTWV0YWRhdGFBY3Rpb25UeXBlcy5GRVRDSF9TVEFSVDoKICAgICAgewogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZSwgewogICAgICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgICAgIGVycm9yczogdW5kZWZpbmVkCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICBjYXNlIE1ldGFkYXRhQWN0aW9uVHlwZXMuRkVUQ0hfU1VDQ0VTUzoKICAgICAgewogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZSwgewogICAgICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgICAgICBlcnJvcnM6IHVuZGVmaW5lZAogICAgICAgIH0sIGFjdGlvbi5wYXlsb2FkKTsKICAgICAgfQoKICAgIGNhc2UgTWV0YWRhdGFBY3Rpb25UeXBlcy5GRVRDSF9FUlJPUjoKICAgICAgewogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZSwgewogICAgICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgICAgICBlcnJvcnM6IGFjdGlvbi5wYXlsb2FkCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICBkZWZhdWx0OgogICAgICB7CiAgICAgICAgcmV0dXJuIHN0YXRlOwogICAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBibG9nOw=="},{"version":3,"sources":["/Users/alexbrown/Development/fandanzle-v2/src/core/metadata/reducer.ts"],"names":["MetadataActionTypes","initialState","errors","undefined","loading","title","blurb","summary","favicon","primaryImage","secondaryImage","blog","state","action","type","FETCH_START","FETCH_SUCCESS","payload","FETCH_ERROR"],"mappings":";AAEA,SAASA,mBAAT,QAAoC,WAApC;AAWA,IAAMC,YAA0B,GAAG;AACjCC,EAAAA,MAAM,EAAEC,SADyB;AAEjCC,EAAAA,OAAO,EAAE,KAFwB;AAGjCC,EAAAA,KAAK,EAAE,EAH0B;AAIjCC,EAAAA,KAAK,EAAE,EAJ0B;AAKjCC,EAAAA,OAAO,EAAE,EALwB;AAMjCC,EAAAA,OAAO,EAAE,EANwB;AAOjCC,EAAAA,YAAY,EAAE,EAPmB;AAQjCC,EAAAA,cAAc,EAAE;AARiB,CAAnC;AAWA,OAAO,IAAMC,IAA6B,GAAG,SAAhCA,IAAgC,GAGxC;AAAA,MAFHC,KAEG,uEAFqBX,YAErB;AAAA,MADHY,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,mBAAmB,CAACe,WAAzB;AAAsC;AACpC,iCAAYH,KAAZ;AAAmBR,UAAAA,OAAO,EAAE,IAA5B;AAAkCF,UAAAA,MAAM,EAAEC;AAA1C;AACD;;AACD,SAAKH,mBAAmB,CAACgB,aAAzB;AAAwC;AACtC,iCAAYJ,KAAZ;AAAmBR,UAAAA,OAAO,EAAE,KAA5B;AAAmCF,UAAAA,MAAM,EAAEC;AAA3C,WAAyDU,MAAM,CAACI,OAAhE;AACD;;AACD,SAAKjB,mBAAmB,CAACkB,WAAzB;AAAsC;AACpC,iCAAYN,KAAZ;AAAmBR,UAAAA,OAAO,EAAE,KAA5B;AAAmCF,UAAAA,MAAM,EAAEW,MAAM,CAACI;AAAlD;AACD;;AACD;AAAS;AACP,eAAOL,KAAP;AACD;AAZH;AAcD,CAlBM;AAoBP,eAAeD,IAAf","sourcesContent":["import { Reducer, AnyAction } from 'redux';\n\nimport { MetadataActionTypes } from './actions';\nimport { IMetadataPayload } from '../../models/metadata';\nimport { INetworkResponse } from '../../models/network';\n\nexport interface IMetadataState extends IMetadataPayload {\n  readonly loading: boolean;\n  readonly errors?: string;\n}\n\ntype MetaDataType = INetworkResponse & IMetadataState;\n\nconst initialState: MetaDataType = {\n  errors: undefined,\n  loading: false,\n  title: '',\n  blurb: '',\n  summary: '',\n  favicon: {},\n  primaryImage: {},\n  secondaryImage: {}\n}\n\nexport const blog: Reducer<IMetadataState> = (\n  state: IMetadataState = initialState,\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case MetadataActionTypes.FETCH_START: {\n      return { ...state, loading: true, errors: undefined };\n    }\n    case MetadataActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, errors: undefined, ...action.payload };\n    }\n    case MetadataActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default blog;\n"]}]}