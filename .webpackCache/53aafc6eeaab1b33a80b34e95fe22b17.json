{"remainingRequest":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js!/Users/alexbrown/Development/fandanzle-v2/src/core/contact/actions.ts","dependencies":[{"path":"/Users/alexbrown/Development/fandanzle-v2/src/core/contact/actions.ts","mtime":1576192411602},{"path":"/Users/alexbrown/Development/fandanzle-v2/.babelrc","mtime":1575409032754},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/cache-loader/dist/cjs.js","mtime":1583684819619},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js","mtime":1575412165599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgYWN0aW9uIH0gZnJvbSAndHlwZXNhZmUtYWN0aW9ucyc7CmV4cG9ydCB2YXIgQ29udGFjdEFjdGlvblR5cGVzOwoKKGZ1bmN0aW9uIChDb250YWN0QWN0aW9uVHlwZXMpIHsKICBDb250YWN0QWN0aW9uVHlwZXNbIkZFVENIX1NUQVJUIl0gPSAiQGNvbnRhY3QvRkVUQ0hfU1RBUlQiOwogIENvbnRhY3RBY3Rpb25UeXBlc1siRkVUQ0hfU1VDQ0VTUyJdID0gIkBjb250YWN0L0ZFVENIX1NVQ0NFU1MiOwogIENvbnRhY3RBY3Rpb25UeXBlc1siRkVUQ0hfRVJST1IiXSA9ICJAY29udGFjdC9GRVRDSF9FUlJPUiI7Cn0pKENvbnRhY3RBY3Rpb25UeXBlcyB8fCAoQ29udGFjdEFjdGlvblR5cGVzID0ge30pKTsKCmV4cG9ydCB2YXIgZmV0Y2hSZXF1ZXN0ID0gZnVuY3Rpb24gZmV0Y2hSZXF1ZXN0KCkgewogIHJldHVybiBhY3Rpb24oQ29udGFjdEFjdGlvblR5cGVzLkZFVENIX1NUQVJUKTsKfTsKZXhwb3J0IHZhciBmZXRjaFN1Y2Nlc3MgPSBmdW5jdGlvbiBmZXRjaFN1Y2Nlc3MoZGF0YSkgewogIHJldHVybiBhY3Rpb24oQ29udGFjdEFjdGlvblR5cGVzLkZFVENIX1NVQ0NFU1MsIGRhdGEpOwp9OwpleHBvcnQgdmFyIGZldGNoRXJyb3IgPSBmdW5jdGlvbiBmZXRjaEVycm9yKG1lc3NhZ2UpIHsKICByZXR1cm4gYWN0aW9uKENvbnRhY3RBY3Rpb25UeXBlcy5GRVRDSF9FUlJPUiwgbWVzc2FnZSk7Cn07"},{"version":3,"sources":["/Users/alexbrown/Development/fandanzle-v2/src/core/contact/actions.ts"],"names":["action","ContactActionTypes","fetchRequest","FETCH_START","fetchSuccess","data","FETCH_SUCCESS","fetchError","message","FETCH_ERROR"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AAIA,WAAYC,kBAAZ;;WAAYA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;GAAAA,kB,KAAAA,kB;;AAMZ,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAMF,MAAM,CAACC,kBAAkB,CAACE,WAApB,CAAZ;AAAA,CAArB;AAEP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA,SAC1BL,MAAM,CAACC,kBAAkB,CAACK,aAApB,EAAmCD,IAAnC,CADoB;AAAA,CAArB;AAGP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD;AAAA,SACxBR,MAAM,CAACC,kBAAkB,CAACQ,WAApB,EAAiCD,OAAjC,CADkB;AAAA,CAAnB","sourcesContent":["import { action } from 'typesafe-actions';\n\nimport { IContactPayload } from '../../models/contact';\n\nexport enum ContactActionTypes {\n  FETCH_START = '@contact/FETCH_START',\n  FETCH_SUCCESS = '@contact/FETCH_SUCCESS',\n  FETCH_ERROR = '@contact/FETCH_ERROR',\n}\n\nexport const fetchRequest = () => action(ContactActionTypes.FETCH_START);\n\nexport const fetchSuccess = (data: IContactPayload[]) =>\n  action(ContactActionTypes.FETCH_SUCCESS, data);\n\nexport const fetchError = (message: string) =>\n  action(ContactActionTypes.FETCH_ERROR, message);\n"]}]}