{"remainingRequest":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js!/Users/alexbrown/Development/fandanzle-v2/src/core/metadata/actions.ts","dependencies":[{"path":"/Users/alexbrown/Development/fandanzle-v2/src/core/metadata/actions.ts","mtime":1576192411606},{"path":"/Users/alexbrown/Development/fandanzle-v2/.babelrc","mtime":1575409032754},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/cache-loader/dist/cjs.js","mtime":1583684819619},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js","mtime":1575412165599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgYWN0aW9uIH0gZnJvbSAndHlwZXNhZmUtYWN0aW9ucyc7CmV4cG9ydCB2YXIgTWV0YWRhdGFBY3Rpb25UeXBlczsKCihmdW5jdGlvbiAoTWV0YWRhdGFBY3Rpb25UeXBlcykgewogIE1ldGFkYXRhQWN0aW9uVHlwZXNbIkZFVENIX1NUQVJUIl0gPSAiQG1ldGFkYXRhL0ZFVENIX1NUQVJUIjsKICBNZXRhZGF0YUFjdGlvblR5cGVzWyJGRVRDSF9TVUNDRVNTIl0gPSAiQG1ldGFkYXRhL0ZFVENIX1NVQ0NFU1MiOwogIE1ldGFkYXRhQWN0aW9uVHlwZXNbIkZFVENIX0VSUk9SIl0gPSAiQG1ldGFkYXRhL0ZFVENIX0VSUk9SIjsKfSkoTWV0YWRhdGFBY3Rpb25UeXBlcyB8fCAoTWV0YWRhdGFBY3Rpb25UeXBlcyA9IHt9KSk7CgpleHBvcnQgdmFyIGZldGNoUmVxdWVzdCA9IGZ1bmN0aW9uIGZldGNoUmVxdWVzdCgpIHsKICByZXR1cm4gYWN0aW9uKE1ldGFkYXRhQWN0aW9uVHlwZXMuRkVUQ0hfU1RBUlQpOwp9OwpleHBvcnQgdmFyIGZldGNoU3VjY2VzcyA9IGZ1bmN0aW9uIGZldGNoU3VjY2VzcyhkYXRhKSB7CiAgcmV0dXJuIGFjdGlvbihNZXRhZGF0YUFjdGlvblR5cGVzLkZFVENIX1NVQ0NFU1MsIGRhdGEpOwp9OwpleHBvcnQgdmFyIGZldGNoRXJyb3IgPSBmdW5jdGlvbiBmZXRjaEVycm9yKG1lc3NhZ2UpIHsKICByZXR1cm4gYWN0aW9uKE1ldGFkYXRhQWN0aW9uVHlwZXMuRkVUQ0hfRVJST1IsIG1lc3NhZ2UpOwp9Ow=="},{"version":3,"sources":["/Users/alexbrown/Development/fandanzle-v2/src/core/metadata/actions.ts"],"names":["action","MetadataActionTypes","fetchRequest","FETCH_START","fetchSuccess","data","FETCH_SUCCESS","fetchError","message","FETCH_ERROR"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AAIA,WAAYC,mBAAZ;;WAAYA,mB;AAAAA,EAAAA,mB;AAAAA,EAAAA,mB;AAAAA,EAAAA,mB;GAAAA,mB,KAAAA,mB;;AAMZ,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAMF,MAAM,CAACC,mBAAmB,CAACE,WAArB,CAAZ;AAAA,CAArB;AACP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA,SAA8BL,MAAM,CAACC,mBAAmB,CAACK,aAArB,EAAoCD,IAApC,CAApC;AAAA,CAArB;AACP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD;AAAA,SAAqBR,MAAM,CAACC,mBAAmB,CAACQ,WAArB,EAAkCD,OAAlC,CAA3B;AAAA,CAAnB","sourcesContent":["import { action } from 'typesafe-actions';\n\nimport { IMetadataPayload } from '../../models/metadata';\n\nexport enum MetadataActionTypes {\n  FETCH_START = '@metadata/FETCH_START',\n  FETCH_SUCCESS = '@metadata/FETCH_SUCCESS',\n  FETCH_ERROR = '@metadata/FETCH_ERROR',\n}\n\nexport const fetchRequest = () => action(MetadataActionTypes.FETCH_START);\nexport const fetchSuccess = (data: IMetadataPayload[]) => action(MetadataActionTypes.FETCH_SUCCESS, data);\nexport const fetchError = (message: string) => action(MetadataActionTypes.FETCH_ERROR, message);\n"]}]}