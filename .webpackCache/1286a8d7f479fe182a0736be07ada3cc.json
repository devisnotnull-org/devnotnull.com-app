{"remainingRequest":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js!/Users/alexbrown/Development/fandanzle-v2/src/web/pages/blog/blog.tsx","dependencies":[{"path":"/Users/alexbrown/Development/fandanzle-v2/src/web/pages/blog/blog.tsx","mtime":1583614155931},{"path":"/Users/alexbrown/Development/fandanzle-v2/.babelrc","mtime":1575409032754},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/cache-loader/dist/cjs.js","mtime":1583684819619},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js","mtime":1575412165599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvYWxleGJyb3duL0RldmVsb3BtZW50L2ZhbmRhbnpsZS12Mi9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9hbGV4YnJvd24vRGV2ZWxvcG1lbnQvZmFuZGFuemxlLXYyL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tICIvVXNlcnMvYWxleGJyb3duL0RldmVsb3BtZW50L2ZhbmRhbnpsZS12Mi9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI7CmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAiL1VzZXJzL2FsZXhicm93bi9EZXZlbG9wbWVudC9mYW5kYW56bGUtdjIvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvVXNlcnMvYWxleGJyb3duL0RldmVsb3BtZW50L2ZhbmRhbnpsZS12Mi9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMiOwp2YXIgX2pzeEZpbGVOYW1lID0gIi9Vc2Vycy9hbGV4YnJvd24vRGV2ZWxvcG1lbnQvZmFuZGFuemxlLXYyL3NyYy93ZWIvcGFnZXMvYmxvZy9ibG9nLnRzeCI7CmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQsIEZyYWdtZW50IH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnOwppbXBvcnQgeyBtYXBEaXNwYXRjaFRvUHJvcHMsIG1hcFN0YXRlVG9Qcm9wcyB9IGZyb20gJy4vYmxvZy5zdGF0ZSc7CmltcG9ydCAqIGFzIGJsb2dTdHlsZXMgZnJvbSAiLi9ibG9nLmNzcyI7CmV4cG9ydCB2YXIgYmxvY2tUeXBlID0gZnVuY3Rpb24gYmxvY2tUeXBlKGNvbnRlbnQsIG1hcmtzKSB7CiAgdmFyIGNvZGVNYXJrID0gbWFya3MgJiYgbWFya3MuZmluZChmdW5jdGlvbiAoZGQpIHsKICAgIHJldHVybiBkZC50eXBlID09PSAnY29kZSc7CiAgfSk7CiAgdmFyIGNvZGVCb2xkID0gbWFya3MgJiYgbWFya3MuZmluZChmdW5jdGlvbiAoZGQpIHsKICAgIHJldHVybiBkZC50eXBlID09PSAnYm9sZCc7CiAgfSk7CiAgaWYgKCFjb250ZW50KSByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChGcmFnbWVudCwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KTsKICBpZiAoY29kZU1hcmspIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJwcmUiLCB7CiAgICBjbGFzc05hbWU6IGJsb2dTdHlsZXNbIkJsb2NrLS1Db2RlIl0sCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIGNvbnRlbnQpOwogIGlmIChjb2RlQm9sZCkgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImIiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIGNvbnRlbnQpOwogIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBjb250ZW50KTsKfTsKZXhwb3J0IHZhciBCbG9nVmlldyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9Db21wb25lbnQpIHsKICBfaW5oZXJpdHMoQmxvZ1ZpZXcsIF9Db21wb25lbnQpOwoKICBmdW5jdGlvbiBCbG9nVmlldygpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCbG9nVmlldyk7CgogICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihCbG9nVmlldykuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQmxvZ1ZpZXcsIFt7CiAgICBrZXk6ICJjb21wb25lbnRXaWxsTW91bnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHsKICAgICAgdmFyIG9uRmV0Y2hBY3Rpb24gPSB0aGlzLnByb3BzLm9uRmV0Y2hBY3Rpb247CiAgICAgIG9uRmV0Y2hBY3Rpb24oKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZW5kZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgICAgdmFyIGJsb2dJdGVtcyA9IHRoaXMucHJvcHMuYmxvZ0l0ZW1zOwogICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgICAgIGNsYXNzTmFtZTogYmxvZ1N0eWxlcy5Jbm5lckNvbnRhaW5lciwKICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICAgIGxpbmVOdW1iZXI6IDMwCiAgICAgICAgfSwKICAgICAgICBfX3NlbGY6IHRoaXMKICAgICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudCgiaDIiLCB7CiAgICAgICAgX19zb3VyY2U6IHsKICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICBsaW5lTnVtYmVyOiAzMQogICAgICAgIH0sCiAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgIH0sICJCbG9nIHBvc3RzIiksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICAgIGxpbmVOdW1iZXI6IDMyCiAgICAgICAgfSwKICAgICAgICBfX3NlbGY6IHRoaXMKICAgICAgfSwgYmxvZ0l0ZW1zLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgICAgICBjbGFzc05hbWU6IGJsb2dTdHlsZXNbJ0VudHJ5LS1Db250YWluZXInXSwKICAgICAgICAgIF9fc291cmNlOiB7CiAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICAgIGxpbmVOdW1iZXI6IDM1CiAgICAgICAgICB9LAogICAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudCgiaDEiLCB7CiAgICAgICAgICBjbGFzc05hbWU6IGJsb2dTdHlsZXNbIkVudHJ5LS1IZWFkZXIiXSwKICAgICAgICAgIF9fc291cmNlOiB7CiAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICAgIGxpbmVOdW1iZXI6IDM2CiAgICAgICAgICB9LAogICAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgICAgfSwgaXRlbS5maWVsZHMudGl0bGUpLCBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgICBsaW5lTnVtYmVyOiAzNwogICAgICAgICAgfSwKICAgICAgICAgIF9fc2VsZjogdGhpcwogICAgICAgIH0sIGl0ZW0uZmllbGRzLmJsb2dDb250ZW50LmNvbnRlbnQgJiYgaXRlbS5maWVsZHMuYmxvZ0NvbnRlbnQuY29udGVudC5tYXAoZnVuY3Rpb24gKHBheWxvYWQpIHsKICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJwIiwgewogICAgICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICAgICAgbGluZU51bWJlcjogNDAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgICAgICB9LCBwYXlsb2FkLmNvbnRlbnQgJiYgcGF5bG9hZC5jb250ZW50Lm1hcChmdW5jdGlvbiAoc3ViSXRlbSkgewogICAgICAgICAgICByZXR1cm4gYmxvY2tUeXBlKHN1Ykl0ZW0udmFsdWUsIHN1Ykl0ZW0ubWFya3MpOwogICAgICAgICAgfSkpOwogICAgICAgIH0pKSk7CiAgICAgIH0pKSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQmxvZ1ZpZXc7Cn0oQ29tcG9uZW50KTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoQmxvZ1ZpZXcpOw=="},{"version":3,"sources":["/Users/alexbrown/Development/fandanzle-v2/src/web/pages/blog/blog.tsx"],"names":["React","Component","Fragment","connect","mapDispatchToProps","mapStateToProps","blogStyles","blockType","content","marks","codeMark","find","dd","type","codeBold","BlogView","onFetchAction","props","blogItems","InnerContainer","map","item","fields","title","blogContent","payload","subItem","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAA8BC,kBAA9B,EAAkDC,eAAlD,QAAyE,cAAzE;AAEA,OAAO,KAAKC,UAAZ,MAA4B,YAA5B;AAMA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAEC,OAAF,EAAgBC,KAAhB,EAA+B;AACpD,MAAMC,QAAQ,GAAGD,KAAK,IAAIA,KAAK,CAACE,IAAN,CAAW,UAACC,EAAD;AAAA,WAAaA,EAAE,CAACC,IAAH,KAAY,MAAzB;AAAA,GAAX,CAA1B;AACA,MAAMC,QAAQ,GAAGL,KAAK,IAAIA,KAAK,CAACE,IAAN,CAAW,UAACC,EAAD;AAAA,WAAaA,EAAE,CAACC,IAAH,KAAY,MAAzB;AAAA,GAAX,CAA1B;AACA,MAAG,CAACL,OAAJ,EAAa,OAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAGE,QAAH,EAAa,OAAQ;AAAK,IAAA,SAAS,EAAEJ,UAAU,CAAC,aAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CE,OAA5C,CAAR;AACb,MAAGM,QAAH,EAAa,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,OAAJ,CAAR;AACb,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,OAAP,CAAR;AAEH,CARM;AAUP,WAAaO,QAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,yCACyB;AAAA,UACTC,aADS,GACS,KAAKC,KADd,CACTD,aADS;AAEjBA,MAAAA,aAAa;AAChB;AAJL;AAAA;AAAA,6BAKa;AAAA,UACGE,SADH,GACiB,KAAKD,KADtB,CACGC,SADH;AAEL,aACI;AAAK,QAAA,SAAS,EAAEZ,UAAU,CAACa,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,SAAS,CAACE,GAAV,CAAc,UAAAC,IAAI,EAAI;AACnB,eACI;AAAK,UAAA,SAAS,EAAEf,UAAU,CAAC,kBAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAEA,UAAU,CAAC,eAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6Ce,IAAI,CAACC,MAAL,CAAYC,KAAzD,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKF,IAAI,CAACC,MAAL,CAAYE,WAAZ,CAAwBhB,OAAxB,IACGa,IAAI,CAACC,MAAL,CAAYE,WAAZ,CAAwBhB,OAAxB,CAAgCY,GAAhC,CAAoC,UAAAK,OAAO;AAAA,iBACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACAA,OAAO,CAACjB,OAAR,IAAmBiB,OAAO,CAACjB,OAAR,CAAgBY,GAAhB,CAAoB,UAAAM,OAAO;AAAA,mBAAInB,SAAS,CAACmB,OAAO,CAACC,KAAT,EAAgBD,OAAO,CAACjB,KAAxB,CAAb;AAAA,WAA3B,CADnB,CADsC;AAAA,SAA3C,CAFR,CAFJ,CADJ;AAaH,OAdA,CADL,CAFJ,CADJ;AAsBH;AA7BL;;AAAA;AAAA,EAA8BR,SAA9B;AAgCA,eAAeE,OAAO,CAClBE,eADkB,EAElBD,kBAFkB,CAAP,CAGbW,QAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { IBlogComponentProps, mapDispatchToProps, mapStateToProps } from './blog.state';\n\nimport * as blogStyles from \"./blog.css\"\n\nexport type IProps = {\n    to: string\n}\n\nexport const blockType = ( content: any, marks?: []) => {\n    const codeMark = marks && marks.find((dd: any) => dd.type === 'code');\n    const codeBold = marks && marks.find((dd: any) => dd.type === 'bold');\n    if(!content) return <Fragment></Fragment>;\n    if(codeMark) return (<pre className={blogStyles[\"Block--Code\"]}>{content}</pre>);\n    if(codeBold) return (<b>{content}</b>);\n    return (<span>{content}</span>);\n\n}\n\nexport class BlogView extends Component<IBlogComponentProps, {}> {\n    componentWillMount() {\n        const { onFetchAction } = this.props\n        onFetchAction();\n    }\n    render() {\n        const { blogItems } = this.props;\n        return(\n            <div className={blogStyles.InnerContainer}>\n                <h2>Blog posts</h2>\n                <div>\n                    {blogItems.map(item => {\n                        return (\n                            <div className={blogStyles['Entry--Container']}>\n                                <h1 className={blogStyles[\"Entry--Header\"]}>{item.fields.title}</h1>\n                                <div>\n                                    {item.fields.blogContent.content && \n                                        item.fields.blogContent.content.map(payload => \n                                            (<p>\n                                            {payload.content && payload.content.map(subItem => blockType(subItem.value, subItem.marks))}\n                                            </p>)\n                                        )}\n                                    </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(BlogView);\n"]}]}