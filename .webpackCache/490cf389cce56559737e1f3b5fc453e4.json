{"remainingRequest":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js!/Users/alexbrown/Development/fandanzle-v2/src/core/blog/reducer.ts","dependencies":[{"path":"/Users/alexbrown/Development/fandanzle-v2/src/core/blog/reducer.ts","mtime":1583594367249},{"path":"/Users/alexbrown/Development/fandanzle-v2/.babelrc","mtime":1575409032754},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/cache-loader/dist/cjs.js","mtime":1583684819619},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js","mtime":1575412165599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2FsZXhicm93bi9EZXZlbG9wbWVudC9mYW5kYW56bGUtdjIvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZCI7CmltcG9ydCB7IEJsb2dBY3Rpb25UeXBlcyB9IGZyb20gJy4vYWN0aW9ucyc7CnZhciBpbml0aWFsU3RhdGUgPSB7CiAgdG90YWw6IDAsCiAgc2tpcDogMCwKICBsaW1pdDogMCwKICBpdGVtczogW10sCiAgZXJyb3JzOiB1bmRlZmluZWQsCiAgbG9hZGluZzogZmFsc2UKfTsKZXhwb3J0IHZhciBibG9nID0gZnVuY3Rpb24gYmxvZygpIHsKICB2YXIgc3RhdGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGluaXRpYWxTdGF0ZTsKICB2YXIgYWN0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7CgogIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHsKICAgIGNhc2UgQmxvZ0FjdGlvblR5cGVzLkZFVENIX1NUQVJUOgogICAgICB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLCB7CiAgICAgICAgICBsb2FkaW5nOiB0cnVlLAogICAgICAgICAgZXJyb3JzOiB1bmRlZmluZWQKICAgICAgICB9KTsKICAgICAgfQoKICAgIGNhc2UgQmxvZ0FjdGlvblR5cGVzLkZFVENIX1NVQ0NFU1M6CiAgICAgIHsKICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgc3RhdGUsIHsKICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICAgICAgZXJyb3JzOiB1bmRlZmluZWQKICAgICAgICB9LCBhY3Rpb24ucGF5bG9hZCk7CiAgICAgIH0KCiAgICBjYXNlIEJsb2dBY3Rpb25UeXBlcy5GRVRDSF9FUlJPUjoKICAgICAgewogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZSwgewogICAgICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgICAgICBlcnJvcnM6IGFjdGlvbi5wYXlsb2FkCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICBkZWZhdWx0OgogICAgICB7CiAgICAgICAgcmV0dXJuIHN0YXRlOwogICAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBibG9nOw=="},{"version":3,"sources":["/Users/alexbrown/Development/fandanzle-v2/src/core/blog/reducer.ts"],"names":["BlogActionTypes","initialState","total","skip","limit","items","errors","undefined","loading","blog","state","action","type","FETCH_START","FETCH_SUCCESS","payload","FETCH_ERROR"],"mappings":";AAGA,SAASA,eAAT,QAAgC,WAAhC;AAQA,IAAMC,YAAwB,GAAG;AAC/BC,EAAAA,KAAK,EAAE,CADwB;AAE/BC,EAAAA,IAAI,EAAE,CAFyB;AAG/BC,EAAAA,KAAK,EAAE,CAHwB;AAI/BC,EAAAA,KAAK,EAAE,EAJwB;AAK/BC,EAAAA,MAAM,EAAEC,SALuB;AAM/BC,EAAAA,OAAO,EAAE;AANsB,CAAjC;AASA,OAAO,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,GAGpC;AAAA,MAFHC,KAEG,uEAFiBT,YAEjB;AAAA,MADHU,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,eAAe,CAACa,WAArB;AAAkC;AAChC,iCAAYH,KAAZ;AAAmBF,UAAAA,OAAO,EAAE,IAA5B;AAAkCF,UAAAA,MAAM,EAAEC;AAA1C;AACD;;AACD,SAAKP,eAAe,CAACc,aAArB;AAAoC;AAClC,iCAAYJ,KAAZ;AAAmBF,UAAAA,OAAO,EAAE,KAA5B;AAAmCF,UAAAA,MAAM,EAAEC;AAA3C,WAAyDI,MAAM,CAACI,OAAhE;AACD;;AACD,SAAKf,eAAe,CAACgB,WAArB;AAAkC;AAChC,iCAAYN,KAAZ;AAAmBF,UAAAA,OAAO,EAAE,KAA5B;AAAmCF,UAAAA,MAAM,EAAEK,MAAM,CAACI;AAAlD;AACD;;AACD;AAAS;AACP,eAAOL,KAAP;AACD;AAZH;AAcD,CAlBM;AAoBP,eAAeD,IAAf","sourcesContent":["import { Reducer, AnyAction } from 'redux';\n\nimport { ICommonContentListPayload } from '../../models/common';\nimport { BlogActionTypes } from './actions';\nimport { IBlogPostPayload } from '../../models/blog';\n\nexport interface IBlogState extends ICommonContentListPayload<IBlogPostPayload> {\n  readonly loading: boolean;\n  readonly errors?: string;\n}\n\nconst initialState: IBlogState = {\n  total: 0,\n  skip: 0,\n  limit: 0,\n  items: [],\n  errors: undefined,\n  loading: false\n};\n\nexport const blog: Reducer<IBlogState> = (\n  state: IBlogState = initialState,\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case BlogActionTypes.FETCH_START: {\n      return { ...state, loading: true, errors: undefined };\n    }\n    case BlogActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, errors: undefined, ...action.payload };\n    }\n    case BlogActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default blog;\n"]}]}