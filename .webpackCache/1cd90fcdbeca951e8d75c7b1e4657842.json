{"remainingRequest":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js!/Users/alexbrown/Development/fandanzle-v2/src/core/assets/reducer.ts","dependencies":[{"path":"/Users/alexbrown/Development/fandanzle-v2/src/core/assets/reducer.ts","mtime":1583683467416},{"path":"/Users/alexbrown/Development/fandanzle-v2/.babelrc","mtime":1575409032754},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/cache-loader/dist/cjs.js","mtime":1583684819619},{"path":"/Users/alexbrown/Development/fandanzle-v2/node_modules/babel-loader/lib/index.js","mtime":1575412165599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2FsZXhicm93bi9EZXZlbG9wbWVudC9mYW5kYW56bGUtdjIvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZCI7CmltcG9ydCB7IGNsb25lIH0gZnJvbSAncmFtZGEnOwppbXBvcnQgeyBBc3NldEFjdGlvblR5cGVzIH0gZnJvbSAnLi9hY3Rpb25zJzsKdmFyIGluaXRpYWxTdGF0ZSA9IHsKICBlcnJvcnM6IHVuZGVmaW5lZCwKICBsb2FkaW5nOiBmYWxzZSwKICBpdGVtczoge30KfTsKZXhwb3J0IHZhciBhc3NldCA9IGZ1bmN0aW9uIGFzc2V0KCkgewogIHZhciBzdGF0ZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogaW5pdGlhbFN0YXRlOwogIHZhciBhY3Rpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDsKCiAgc3dpdGNoIChhY3Rpb24udHlwZSkgewogICAgY2FzZSBBc3NldEFjdGlvblR5cGVzLkZFVENIX1NUQVJUOgogICAgICB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLCB7CiAgICAgICAgICBsb2FkaW5nOiB0cnVlLAogICAgICAgICAgZXJyb3JzOiB1bmRlZmluZWQKICAgICAgICB9KTsKICAgICAgfQoKICAgIGNhc2UgQXNzZXRBY3Rpb25UeXBlcy5GRVRDSF9TVUNDRVNTOgogICAgICB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLCB7CiAgICAgICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgICAgIGVycm9yczogdW5kZWZpbmVkLAogICAgICAgICAgaXRlbXM6IGNsb25lKHN0YXRlLml0ZW1zKQogICAgICAgIH0pOwogICAgICB9CgogICAgY2FzZSBBc3NldEFjdGlvblR5cGVzLkZFVENIX0VSUk9SOgogICAgICB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLCB7CiAgICAgICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgICAgIGVycm9yczogYWN0aW9uLnBheWxvYWQKICAgICAgICB9KTsKICAgICAgfQoKICAgIGRlZmF1bHQ6CiAgICAgIHsKICAgICAgICByZXR1cm4gc3RhdGU7CiAgICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IGFzc2V0Ow=="},{"version":3,"sources":["/Users/alexbrown/Development/fandanzle-v2/src/core/assets/reducer.ts"],"names":["clone","AssetActionTypes","initialState","errors","undefined","loading","items","asset","state","action","type","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","payload"],"mappings":";AAAA,SAASA,KAAT,QAAkC,OAAlC;AAGA,SAASC,gBAAT,QAAiC,WAAjC;AAaA,IAAMC,YAAyB,GAAG;AAChCC,EAAAA,MAAM,EAAEC,SADwB;AAEhCC,EAAAA,OAAO,EAAE,KAFuB;AAGhCC,EAAAA,KAAK,EAAE;AAHyB,CAAlC;AAMA,OAAO,IAAMC,KAA2B,GAAG,SAA9BA,KAA8B,GAGtC;AAAA,MAFHC,KAEG,uEAFkBN,YAElB;AAAA,MADHO,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,gBAAgB,CAACU,WAAtB;AAAmC;AACjC,iCAAYH,KAAZ;AAAmBH,UAAAA,OAAO,EAAE,IAA5B;AAAkCF,UAAAA,MAAM,EAAEC;AAA1C;AACD;;AACD,SAAKH,gBAAgB,CAACW,aAAtB;AAAqC;AACnC,iCAAYJ,KAAZ;AAAmBH,UAAAA,OAAO,EAAE,KAA5B;AAAmCF,UAAAA,MAAM,EAAEC,SAA3C;AAAsDE,UAAAA,KAAK,EAAEN,KAAK,CAACQ,KAAK,CAACF,KAAP;AAAlE;AACD;;AACD,SAAKL,gBAAgB,CAACY,WAAtB;AAAmC;AACjC,iCAAYL,KAAZ;AAAmBH,UAAAA,OAAO,EAAE,KAA5B;AAAmCF,UAAAA,MAAM,EAAEM,MAAM,CAACK;AAAlD;AACD;;AACD;AAAS;AACP,eAAON,KAAP;AACD;AAZH;AAcD,CAlBM;AAoBP,eAAeD,KAAf","sourcesContent":["import { clone, pipe, prop } from 'ramda';\nimport { Reducer, AnyAction } from 'redux';\n\nimport { AssetActionTypes } from './actions';\nimport { IAssetPayload } from '../../models/asset';\n\ninterface IAssetEntry {\n  [id: string]: IAssetPayload\n}\n\nexport interface IAssetState {\n  readonly loading: boolean\n  readonly errors?: string\n  readonly items: {[id: string]: IAssetPayload}\n}\n\nconst initialState: IAssetState = {\n  errors: undefined,\n  loading: false,\n  items: {}\n};\n\nexport const asset: Reducer<IAssetState> = (\n  state: IAssetState = initialState,\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case AssetActionTypes.FETCH_START: {\n      return { ...state, loading: true, errors: undefined };\n    }\n    case AssetActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, errors: undefined, items: clone(state.items) }\n    }\n    case AssetActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default asset;\n"]}]}