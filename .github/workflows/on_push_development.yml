name: Feature branch build

on:
  push:
    branches-ignore:
      - main

jobs:
  deploy-api:
    runs-on: 'ubuntu-latest'

    defaults:
      run:
        shell: bash
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      KUBECONFIG_FILE: '${{ secrets.PROD_KUBECONFIG }}'

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
        role-duration-seconds: 1200
        role-session-name: MySessionName

    - name: Branch name
      run: echo running on branch ${{ github.ref_name }}

    - run: 'echo "$VPN_CONFIG" > config.ovpn'
      env:
        VPN_CONFIG: ${{secrets.VPN_CONFIG}}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install OpenVPN
      run: |
        sudo apt update
        sudo apt install -y openvpn openvpn-systemd-resolved

    - name: Connect to VPN
      uses: kota65535/github-openvpn-connect-action@v1.0.2
      with:
        config_file: ./config.ovpn
        username: ${{ secrets.OVPN_USERNAME }}
        password: ${{ secrets.OVPN_PASSWORD }}

    - name: Deploy
      uses: vimeda/helm@v1.6.8
      with:
        release: 'devnotnull-ui-${{ github.ref_name }}'
        namespace: 'default'
        repo: 'https://devnotnull-helm.s3.eu-west-2.amazonaws.com'
        repo-alias: devnotnull
        chart: 'devnotnull/nodejs-template'
        token: '${{ github.token }}'
        values: |
          image: 
            repository: "alexbrown201/devnotnull-ui:${{ github.ref_name }} "
            pullPolicy: Always
          name: foobar
          port: 3000
          service:
            type: LoadBalancer
            
    - run: npm install -g yarn

    - run: yarn install 

    - run: yarn build:prod:pure

    - name: Create S3 bucket
      run: aws s3api create-bucket --bucket devnotnull.com-${{ github.ref_name }} --region us-east-1

    - name: Copy S3 bucket assets
      run: aws s3 cp ./build s3://devnotnull.com-github-actions-setup/ --recursive

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: alexbrown201/devnotnull-ui:${{ github.ref_name }} 
        
    - name: Deploy
      uses: vimeda/helm@v1.6.8
      with:
        release: 'devnotnull-ui-${{ github.ref_name }}'
        namespace: 'default'
        repo: 'https://devnotnull-helm.s3.eu-west-2.amazonaws.com'
        repo-alias: devnotnull
        chart: 'devnotnull/nodejs-template'
        token: '${{ github.token }}'
        values: |
          image: 
            repository: "alexbrown201/devnotnull-ui:${{ github.ref_name }} "
            pullPolicy: Always
          name: foobar
          port: 3000
          service:
            type: LoadBalancer
      env:
        KUBECONFIG_FILE: '${{ secrets.PROD_KUBECONFIG }}'