{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/ability/actions.ts","webpack:///./core/constants.ts","webpack:///./core/ability/fetch.ts","webpack:///./core/ability/sagas.ts","webpack:///./core/blog/actions.ts","webpack:///./core/blog/fetch.ts","webpack:///./core/blog/sagas.ts","webpack:///./core/folio/actions.ts","webpack:///./core/folio/fetch.ts","webpack:///./core/folio/sagas.ts","webpack:///./core/education/actions.ts","webpack:///./core/education/fetch.ts","webpack:///./core/education/sagas.ts","webpack:///./core/experiance/actions.ts","webpack:///./core/experiance/fetch.ts","webpack:///./core/experiance/sagas.ts","webpack:///./core/metadata/actions.ts","webpack:///./core/assets/actions.ts","webpack:///./core/metadata/fetch.ts","webpack:///./core/metadata/sagas.ts","webpack:///./core/assets/fetch.ts","webpack:///./core/assets/sagas.ts","webpack:///./core/contact/actions.ts","webpack:///./core/contact/fetch.ts","webpack:///./core/contact/sagas.ts","webpack:///./core/actions.ts","webpack:///./core/sagas.ts","webpack:///./core/blog/reducer.ts","webpack:///./core/ability/reducer.ts","webpack:///./core/education/reducer.ts","webpack:///./core/experiance/reducer.ts","webpack:///./core/folio/reducer.ts","webpack:///./core/metadata/reducer.ts","webpack:///./core/assets/reducer.ts","webpack:///./core/contact/reducer.ts","webpack:///./core/reducers.ts","webpack:///./utils.ts","webpack:///./core/store.ts","webpack:///./web/common/link/link.tsx","webpack:///./web/components/profile/profile.tsx","webpack:///./core/metadata/selectors.ts","webpack:///./web/containers/header/header.tsx","webpack:///./web/containers/header/header.state.tsx","webpack:///./web/components/about/about.tsx","webpack:///./web/common/favicon/favicon.tsx","webpack:///./web/components/contact/contact.tsx","webpack:///./web/components/skillz/skillz.tsx","webpack:///./web/components/experiance/experiance.tsx","webpack:///./web/components/education/education.tsx","webpack:///./core/ability/selectors.ts","webpack:///./core/experiance/selectors.ts","webpack:///./core/education/selectors.ts","webpack:///./core/blog/selectors.ts","webpack:///./core/folio/selectors.ts","webpack:///./core/contact/selectors.ts","webpack:///./web/pages/home/home.tsx","webpack:///./web/pages/home/home.state.tsx","webpack:///./web/pages/blog/blog.tsx","webpack:///./web/pages/blog/blog.state.tsx","webpack:///./web/pages/notFound/notFound.tsx","webpack:///./web/pages/notFound/notFound.state.tsx","webpack:///./web/app.tsx","webpack:///./client/index.tsx","webpack:///./web/style/common.css","webpack:///./web/components/profile/profile.css","webpack:///./web/common/favicon/favicon.css","webpack:///./web/pages/blog/blog.css","webpack:///./web/components/skillz/skillz.css","webpack:///./web/components/experiance/experiance.css","webpack:///./web/components/education/education.css","webpack:///./web/pages/home/home.css","webpack:///./web/components/contact/contact.css"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","AbilitiesActionTypes","CONTENT_TYPE","TOKEN","ENDPOINT","fetchAbilities","axios","abilitiesItem","headers","Authorization","abilitiesSagas","payload","put","type","FETCH_SUCCESS","FETCH_ERROR","ex","BlogActionTypes","fetchBlog","blogItem","blogSaga","FolioActionTypes","fetchFolio","portfolioItem","folioSaga","EducationActionTypes","fetchEducation","educationItem","educationSaga","ExperianceActionTypes","fetchExperiance","experienceItem","experianceSaga","MetadataActionTypes","AssetActionTypes","fetchMetadata","id","metadataSagas","FETCH_START","path","fields","assetSaga","ContactActionTypes","fetchContact","contactItem","contactSaga","GlobalActionTypes","fetchRequest","action","fetchAllSaga","rootSaga","all","takeEvery","initialState","total","skip","limit","items","errors","undefined","loading","blog","state","title","blurb","summary","favicon","primaryImage","secondaryImage","asset","clone","rootReducers","history","combineReducers","ability","education","experiance","folio","metadata","assets","contact","router","connectRouter","isServerRender","Link","to","children","includes","isExternalLink","href","Profile","className","classnames","styles","src","alt","getMetadata","prop","pipe","propOr","HeaderView","Component","render","this","props","connect","dispatch","onFetchAction","About","commonStyles","Favicon","iconMeta","viewBox","rotate","iconSelector","xmlns","Contact","contactList","map","item","index","icon","link","text","SkillzValue","values","Skillz","abilitiesList","subject","skills","Experiance","experianceList","moment","startDate","format","endDate","company","description","Education","educationList","institute","qualifications","qualification","getAbility","getAbilityItems","getExperiance","getExperianceItems","getEducation","getEducationItems","getBlog","getBlogItems","getFolioItems","getContact","getContactItems","HomeView","abilityItems","educationItems","experianceItems","contactItems","homeStyles","blogItems","folioList","BlogView","componentWillMount","blogStyles","blogContent","content","subItem","marks","codeMark","find","dd","codeBold","blockType","NotFoundView","AppRouter","React","Helmet","exact","component","HomeViewContainer","BlogViewContainer","NotFoundComponent","preloadedState","__INITIAL_STATE__","store","reduxState","console","log","saga","createSaga","routerMiddleware","enhancer","composeWithDevTools","applyMiddleware","createStore","runSaga","run","closeSagas","END","createHistory","rootTask","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/bundle.ebc6494c67e1e6789515.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([118,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { action } from 'typesafe-actions';\n\nimport { IAbillityPayload } from '../../models/abillity';\n\nexport enum AbilitiesActionTypes {\n  FETCH_START = '@abilities/FETCH_START',\n  FETCH_SUCCESS = '@abilities/FETCH_SUCCESS',\n  FETCH_ERROR = '@abilities/FETCH_ERROR',\n}\n\nexport const fetchRequest = () => action(AbilitiesActionTypes.FETCH_START);\nexport const fetchSuccess = (data: IAbillityPayload[]) => action(AbilitiesActionTypes.FETCH_SUCCESS, data);\nexport const fetchError = (message: string) => action(AbilitiesActionTypes.FETCH_ERROR, message);\n","export enum CONTENT_TYPE {\n    experienceItem = \"experienceItem\",\n    contactItem = \"contactItem\",\n    portfolioItem= \"portfolioItem\",\n    abilitiesItem = \"abilities\",\n    siteMetadata = \"siteMetadata\",\n    educationItem = \"education\",\n    metaItem = \"metaItem\",\n    blogItem = \"blogItem\"\n}\n\nexport const COMMON_ENTITY = {\n    default: \"\",\n}\n\nexport const TOKEN = \"Bearer jxL60x3L_5Xi9t-pyThRTqoJ2XXytZaumaRJQvIwrGE\";\n\nexport const ENDPOINT = \"https://cdn.contentful.com/spaces/a540ntfc59hv/entries/\";\nexport const ITEM_ENDPOINT = \"https://cdn.contentful.com/spaces/a540ntfc59hv/\";\n\nexport const metadataId = '721DX3ujLmVAwmiguGLP8t';\n","import axios from 'axios';\n\nimport { ENDPOINT, TOKEN, CONTENT_TYPE } from \"../constants\"\n\nconst select = 'fields';\nconst order = '-fields.level';\n\nexport const fetchAbilities = () => axios.get(`${ENDPOINT}?content_type=${CONTENT_TYPE.abilitiesItem}&select=${select}&order=${order}`,  { headers: { Authorization: TOKEN } });\n","import { call, put, all, takeEvery } from 'redux-saga/effects';\nimport { AbilitiesActionTypes } from './actions'\n\nimport { fetchAbilities } from './fetch';\n\nexport function* abilitiesSagas() {\n  try {\n    const payload = yield call(fetchAbilities);\n    yield put({\n      type: AbilitiesActionTypes.FETCH_SUCCESS,\n      payload: payload.data\n    });\n  } catch(ex) {\n    yield put({\n      type: AbilitiesActionTypes.FETCH_ERROR,\n      ex\n    });\n  }\n}","import { action } from 'typesafe-actions';\n\nimport { IBlogPostPayload } from '../../models/blog';\n\nexport enum BlogActionTypes {\n  FETCH_START = '@blog/FETCH_START',\n  FETCH_SUCCESS = '@blog/FETCH_SUCCESS',\n  FETCH_ERROR = '@blog/FETCH_ERROR',\n}\n\nexport const fetchRequest = () => action(BlogActionTypes.FETCH_START);\n\nexport const fetchSuccess = (data: IBlogPostPayload[]) =>\n  action(BlogActionTypes.FETCH_SUCCESS, data);\n\nexport const fetchError = (message: string) =>\n  action(BlogActionTypes.FETCH_ERROR, message);\n","import axios from 'axios';\n\nimport { ENDPOINT, TOKEN, CONTENT_TYPE } from \"../constants\"\n\nexport const fetchBlog = () => axios.get(`${ENDPOINT}?content_type=${CONTENT_TYPE.blogItem}&select=fields&`,  { headers: { Authorization: TOKEN } });\n","import { call, put } from 'redux-saga/effects';\n\nimport { BlogActionTypes } from './actions'\n\nimport { fetchBlog } from './fetch';\n\nexport function* blogSaga() {\n  try {\n    const payload = yield call(fetchBlog);\n    //\n    yield put({\n      type: BlogActionTypes.FETCH_SUCCESS,\n      payload: payload.data\n    });\n  } catch(ex) {\n    //\n    yield put({\n      type: BlogActionTypes.FETCH_ERROR,\n      ex\n    });\n  }\n}\n","import { action } from 'typesafe-actions';\n\nimport { IFolioPayload } from '../../models/folio';\n\nexport enum FolioActionTypes {\n  FETCH_START = '@folio/FETCH_START',\n  FETCH_SUCCESS = '@folio/FETCH_SUCCESS',\n  FETCH_ERROR = '@folio/FETCH_ERROR',\n}\n\nexport const fetchRequest = () => action(FolioActionTypes.FETCH_START);\n\nexport const fetchSuccess = (data: IFolioPayload[]) =>\n  action(FolioActionTypes.FETCH_SUCCESS, data);\n\nexport const fetchError = (message: string) =>\n  action(FolioActionTypes.FETCH_ERROR, message);\n","import axios from 'axios';\n\nimport { ENDPOINT, TOKEN, CONTENT_TYPE } from \"../constants\"\n\nexport const fetchFolio = () => axios.get(`${ENDPOINT}?content_type=${CONTENT_TYPE.portfolioItem}&select=fields`,  { headers: { Authorization: TOKEN } });\n","import { call, put, all, takeEvery } from 'redux-saga/effects';\nimport { FolioActionTypes } from './actions'\n\nimport { fetchFolio } from './fetch';\n\nexport function* folioSaga() {\n  try {\n    const payload = yield call(fetchFolio);\n    yield put({\n      type: FolioActionTypes.FETCH_SUCCESS,\n      payload: payload.data\n    });\n  } catch(ex) {\n    yield put({\n      type: FolioActionTypes.FETCH_ERROR,\n      ex\n    });\n  }\n}\n","import { action } from 'typesafe-actions';\n\nimport { IEducationPayload } from '../../models/education';\n\nexport enum EducationActionTypes {\n  FETCH_START = '@education/FETCH_START',\n  FETCH_SUCCESS = '@education/FETCH_SUCCESS',\n  FETCH_ERROR = '@education/FETCH_ERROR',\n}\n\nexport const fetchRequest = () => action(EducationActionTypes.FETCH_START);\n\nexport const fetchSuccess = (data: IEducationPayload[]) =>\n  action(EducationActionTypes.FETCH_SUCCESS, data);\n\nexport const fetchError = (message: string) =>\n  action(EducationActionTypes.FETCH_ERROR, message);\n","import axios from 'axios';\n\nimport { ENDPOINT, TOKEN, CONTENT_TYPE } from \"../constants\"\n\nexport const fetchEducation = () => axios.get(`${ENDPOINT}?content_type=${CONTENT_TYPE.educationItem}&select=fields`,  { headers: { Authorization: TOKEN } });\n","import { call, put, all, takeEvery } from 'redux-saga/effects';\nimport { EducationActionTypes } from './actions'\n\nimport { fetchEducation } from './fetch';\n\nexport function* educationSaga() {\n  try {\n    const payload = yield call(fetchEducation);\n    yield put({\n      type: EducationActionTypes.FETCH_SUCCESS,\n      payload: payload.data\n    });\n  } catch(ex) {\n    yield put({\n      type: EducationActionTypes.FETCH_ERROR,\n      ex\n    });\n  }\n}\n","import { action } from 'typesafe-actions';\n\nimport { IExperiancePayload } from '../../models/experiance';\n\nexport enum ExperianceActionTypes {\n  FETCH_START = '@experiance/FETCH_START',\n  FETCH_SUCCESS = '@experiance/FETCH_SUCCESS',\n  FETCH_ERROR = '@experiance/FETCH_ERROR',\n}\n\nexport const fetchRequest = () => action(ExperianceActionTypes.FETCH_START);\n\nexport const fetchSuccess = (data: IExperiancePayload[]) =>\n  action(ExperianceActionTypes.FETCH_SUCCESS, data);\n\nexport const fetchError = (message: string) =>\n  action(ExperianceActionTypes.FETCH_ERROR, message);\n","import axios from 'axios';\n\nimport { ENDPOINT, TOKEN, CONTENT_TYPE } from \"../constants\"\n\nconst select = 'fields';\nconst order = '-fields.startDate';\n\nexport const fetchExperiance = () => axios.get(`${ENDPOINT}?content_type=${CONTENT_TYPE.experienceItem}&select=${select}&order=${order}`,  { headers: { Authorization: TOKEN } });\n","import { call, put, all, takeEvery } from 'redux-saga/effects';\nimport { ExperianceActionTypes } from './actions'\n\nimport { fetchExperiance } from './fetch';\n\nexport function* experianceSaga() {\n  try {\n    const payload = yield call(fetchExperiance);\n    yield put({\n      type: ExperianceActionTypes.FETCH_SUCCESS,\n      payload: payload.data\n    });\n  } catch(ex) {\n    yield put({\n      type: ExperianceActionTypes.FETCH_ERROR,\n      ex\n    });\n  }\n}\n","import { action } from 'typesafe-actions';\n\nimport { IMetadataPayload } from '../../models/metadata';\n\nexport enum MetadataActionTypes {\n  FETCH_START = '@metadata/FETCH_START',\n  FETCH_SUCCESS = '@metadata/FETCH_SUCCESS',\n  FETCH_ERROR = '@metadata/FETCH_ERROR',\n}\n\nexport const fetchRequest = () => action(MetadataActionTypes.FETCH_START);\nexport const fetchSuccess = (data: IMetadataPayload[]) => action(MetadataActionTypes.FETCH_SUCCESS, data);\nexport const fetchError = (message: string) => action(MetadataActionTypes.FETCH_ERROR, message);\n","import { action } from 'typesafe-actions';\n\nimport { IAssetPayload } from '../../models/asset';\n\nexport enum AssetActionTypes {\n  FETCH_START = '@asset/FETCH_START',\n  FETCH_SUCCESS = '@asset/FETCH_SUCCESS',\n  FETCH_ERROR = '@asset/FETCH_ERROR',\n}\n\nexport const fetchRequest = () => action(AssetActionTypes.FETCH_START);\nexport const fetchSuccess = (data: IAssetPayload[]) => action(AssetActionTypes.FETCH_SUCCESS, data);\nexport const fetchError = (message: string) => action(AssetActionTypes.FETCH_ERROR, message);\n","import axios from 'axios';\n\nimport { ENDPOINT, TOKEN, CONTENT_TYPE } from \"../constants\"\n\nexport const fetchMetadata = (id: string) => axios.get(`${ENDPOINT}${id}`,  { headers: { Authorization: TOKEN } });\n","import { path } from 'ramda';\nimport { call, put } from 'redux-saga/effects';\n\nimport { MetadataActionTypes } from './actions'\nimport { AssetActionTypes } from '../assets/actions';\nimport { fetchMetadata } from './fetch';\nimport { metadataId } from '../constants';\n\nexport function* metadataSagas() {\n  try {\n    const payload = yield call(fetchMetadata, metadataId);    \n    yield put({\n      type: AssetActionTypes.FETCH_START,\n      payload: path<any>(['data', 'fields', 'primaryImage', 'sys', 'id'], payload)\n    });\n    \n    yield put({\n      type: MetadataActionTypes.FETCH_SUCCESS,\n      payload: payload.data.fields\n    });\n  } catch(ex) {\n    yield put({\n      type: MetadataActionTypes.FETCH_ERROR,\n      ex\n    });\n  }\n}","import axios from 'axios';\n\nimport { ENDPOINT, TOKEN, CONTENT_TYPE } from \"../constants\"\n\nconst select = 'fields';\nconst order = '-fields.level';\n\nexport const fetchAbilities = () => axios.get(`${ENDPOINT}?content_type=${CONTENT_TYPE.abilitiesItem}&select=${select}&order=${order}`,  { headers: { Authorization: TOKEN } });\n","import { call, put, all, takeEvery } from 'redux-saga/effects';\nimport { AssetActionTypes } from './actions'\n\nimport { fetchAbilities } from './fetch';\n\nexport function* assetSaga() {\n  try {\n    const payload = yield call(fetchAbilities);\n    yield put({\n      type: AssetActionTypes.FETCH_SUCCESS,\n      payload: payload.data\n    });\n  } catch(ex) {\n    yield put({\n      type: AssetActionTypes.FETCH_ERROR,\n      ex\n    });\n  }\n}","import { action } from 'typesafe-actions';\n\nimport { IContactPayload } from '../../models/contact';\n\nexport enum ContactActionTypes {\n  FETCH_START = '@contact/FETCH_START',\n  FETCH_SUCCESS = '@contact/FETCH_SUCCESS',\n  FETCH_ERROR = '@contact/FETCH_ERROR',\n}\n\nexport const fetchRequest = () => action(ContactActionTypes.FETCH_START);\n\nexport const fetchSuccess = (data: IContactPayload[]) =>\n  action(ContactActionTypes.FETCH_SUCCESS, data);\n\nexport const fetchError = (message: string) =>\n  action(ContactActionTypes.FETCH_ERROR, message);\n","import axios from 'axios';\n\nimport { ENDPOINT, TOKEN, CONTENT_TYPE } from \"../constants\"\n\nexport const fetchContact = () => axios.get(`${ENDPOINT}?content_type=${CONTENT_TYPE.contactItem}&select=fields`,  { headers: { Authorization: TOKEN } });\n","import { call, put } from 'redux-saga/effects';\nimport { ContactActionTypes } from './actions'\n\nimport { fetchContact } from './fetch';\n\nexport function* contactSaga() {\n  try {\n    const payload = yield call(fetchContact);\n    yield put({\n      type: ContactActionTypes.FETCH_SUCCESS,\n      payload: payload.data\n    });\n  } catch(ex) {\n    yield put({\n      type: ContactActionTypes.FETCH_ERROR,\n      ex\n    });\n  }\n}\n","import { action } from 'typesafe-actions';\n\nimport { AbilitiesActionTypes } from './ability/actions'\nimport { BlogActionTypes } from './blog/actions'\nimport { EducationActionTypes } from './education/actions'\nimport { ExperianceActionTypes } from './experiance/actions'\nimport { FolioActionTypes } from './folio/actions'\nimport { ContactActionTypes } from './contact/actions'\nimport { AssetActionTypes } from './assets/actions'\n\nexport {\n  AbilitiesActionTypes,\n  BlogActionTypes,\n  EducationActionTypes,\n  ExperianceActionTypes,\n  FolioActionTypes,\n  AssetActionTypes,\n  ContactActionTypes\n}\n\nexport enum GlobalActionTypes {\n  FETCH_START = '@global/FETCH_START',\n  FETCH_SUCCESS = '@global/FETCH_SUCCESS',\n  FETCH_ERROR = '@global/FETCH_ERROR',\n}\n\nexport const fetchRequest = () => action(GlobalActionTypes.FETCH_START);\nexport const fetchSuccess = () => action(GlobalActionTypes.FETCH_SUCCESS);\nexport const fetchError = (message: string) => action(GlobalActionTypes.FETCH_ERROR, message);\n","import { all, takeEvery} from 'redux-saga/effects'\n\nimport { abilitiesSagas } from './ability/sagas';\nimport { blogSaga } from './blog/sagas';\nimport { folioSaga } from './folio/sagas';\nimport { educationSaga } from './education/sagas';\nimport { experianceSaga } from './experiance/sagas';\nimport { metadataSagas } from './metadata/sagas';\nimport { assetSaga } from './assets/sagas';\nimport { contactSaga } from './contact/sagas';\n\nimport { \n  AbilitiesActionTypes,\n  BlogActionTypes,\n  EducationActionTypes,\n  ExperianceActionTypes,\n  FolioActionTypes,\n  AssetActionTypes,\n  GlobalActionTypes\n} from './actions'\n\nexport function* fetchAllSaga() {\n  yield all([\n    abilitiesSagas(),\n    blogSaga(),\n    educationSaga(),\n    experianceSaga(),\n    folioSaga(),\n    metadataSagas()\n  ])\n}\n\nexport default function* rootSaga() {\n  yield all([\n    // Fetch our global parameters\n    fetchAllSaga(),\n    // Bind our actions\n    takeEvery(GlobalActionTypes.FETCH_START, metadataSagas),\n    takeEvery(AbilitiesActionTypes.FETCH_START, abilitiesSagas),\n    takeEvery(BlogActionTypes.FETCH_START, blogSaga),\n    takeEvery(EducationActionTypes.FETCH_START, educationSaga),\n    takeEvery(ExperianceActionTypes.FETCH_START, experianceSaga),\n    takeEvery(FolioActionTypes.FETCH_START, folioSaga),\n    takeEvery(AssetActionTypes.FETCH_START, assetSaga),\n    takeEvery(AssetActionTypes.FETCH_START, contactSaga),\n  ])\n}","import { Reducer, AnyAction } from 'redux';\n\nimport { ICommonContentListPayload } from '../../models/common';\nimport { BlogActionTypes } from './actions';\nimport { IBlogPostPayload } from '../../models/blog';\n\nexport interface IBlogState extends ICommonContentListPayload<IBlogPostPayload> {\n  readonly loading: boolean;\n  readonly errors?: string;\n}\n\nconst initialState: IBlogState = {\n  total: 0,\n  skip: 0,\n  limit: 0,\n  items: [],\n  errors: undefined,\n  loading: false\n};\n\nexport const blog: Reducer<IBlogState> = (\n  state: IBlogState = initialState,\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case BlogActionTypes.FETCH_START: {\n      return { ...state, loading: true, errors: undefined };\n    }\n    case BlogActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, errors: undefined, ...action.payload };\n    }\n    case BlogActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default blog;\n","import { Reducer, AnyAction } from 'redux';\n\nimport { AbilitiesActionTypes } from './actions';\nimport { ICommonContentListPayload } from '../../models/common';\nimport { IAbillityPayload } from '../../models/abillity';\n\nexport interface IAbilityState extends ICommonContentListPayload<IAbillityPayload> {\n  readonly loading: boolean;\n  readonly errors?: string;\n}\n\nconst initialState: IAbilityState = {\n  total: 0,\n  skip: 0,\n  limit: 0,\n  items: [],\n  errors: undefined,\n  loading: false\n};\n\nexport const blog: Reducer<IAbilityState> = (\n  state: IAbilityState = initialState,\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case AbilitiesActionTypes.FETCH_START: {\n      return { ...state, loading: true, errors: undefined };\n    }\n    case AbilitiesActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, errors: undefined, ...action.payload };\n    }\n    case AbilitiesActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default blog;\n","import { Reducer, AnyAction } from 'redux';\n\nimport { ICommonContentListPayload } from '../../models/common';\nimport { EducationActionTypes } from './actions';\nimport { IEducationPayload } from '../../models/education';\n\nexport interface IEducationState extends ICommonContentListPayload<IEducationPayload> {\n  readonly loading: boolean;\n  readonly errors?: string;\n}\n\nconst initialState: IEducationState = {\n  total: 0,\n  skip: 0,\n  limit: 0,\n  items: [],\n  errors: undefined,\n  loading: false\n};\n\nexport const blog: Reducer<IEducationState> = (\n  state: IEducationState = initialState,\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case EducationActionTypes.FETCH_START: {\n      return { ...state, loading: true, errors: undefined };\n    }\n    case EducationActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, errors: undefined, ...action.payload };\n    }\n    case EducationActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default blog;\n","import { Reducer, AnyAction } from 'redux';\n\nimport { ICommonContentListPayload } from '../../models/common';\nimport { ExperianceActionTypes } from './actions';\nimport { IExperiancePayload } from '../../models/experiance';\n\nexport interface IExperianceState extends ICommonContentListPayload<IExperiancePayload> {\n  readonly loading: boolean;\n  readonly errors?: string;\n}\n\nconst initialState: IExperianceState = {\n  total: 0,\n  skip: 0,\n  limit: 0,\n  items: [],\n  errors: undefined,\n  loading: false\n};\n\nexport const blog: Reducer<IExperianceState> = (\n  state: IExperianceState = initialState,\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case ExperianceActionTypes.FETCH_START: {\n      return { ...state, loading: true, errors: undefined };\n    }\n    case ExperianceActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, errors: undefined, ...action.payload  };\n    }\n    case ExperianceActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default blog;\n","import { Reducer, AnyAction } from 'redux';\n\nimport { ICommonContentListPayload } from '../../models/common';\nimport { FolioActionTypes } from './actions';\nimport { IFolioPayload } from '../../models/folio';\n\nexport interface IFolioState extends ICommonContentListPayload<IFolioPayload> {\n  readonly loading: boolean;\n  readonly errors?: string;\n}\n\nconst initialState: IFolioState = {\n  total: 0,\n  skip: 0,\n  limit: 0,\n  items: [],\n  errors: undefined,\n  loading: false\n};\n\nexport const blog: Reducer<IFolioState> = (\n  state: IFolioState = initialState,\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case FolioActionTypes.FETCH_START: {\n      return { ...state, loading: true, errors: undefined };\n    }\n    case FolioActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, errors: undefined, ...action.payload  };\n    }\n    case FolioActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default blog;\n","import { Reducer, AnyAction } from 'redux';\n\nimport { MetadataActionTypes } from './actions';\nimport { IMetadataPayload } from '../../models/metadata';\nimport { INetworkResponse } from '../../models/network';\n\nexport interface IMetadataState extends IMetadataPayload {\n  readonly loading: boolean;\n  readonly errors?: string;\n}\n\ntype MetaDataType = INetworkResponse & IMetadataState;\n\nconst initialState: MetaDataType = {\n  errors: undefined,\n  loading: false,\n  title: '',\n  blurb: '',\n  summary: '',\n  favicon: {},\n  primaryImage: {},\n  secondaryImage: {}\n}\n\nexport const blog: Reducer<IMetadataState> = (\n  state: IMetadataState = initialState,\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case MetadataActionTypes.FETCH_START: {\n      return { ...state, loading: true, errors: undefined };\n    }\n    case MetadataActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, errors: undefined, ...action.payload };\n    }\n    case MetadataActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default blog;\n","import { clone, pipe, prop } from 'ramda';\nimport { Reducer, AnyAction } from 'redux';\n\nimport { AssetActionTypes } from './actions';\nimport { IAssetPayload } from '../../models/asset';\n\ninterface IAssetEntry {\n  [id: string]: IAssetPayload\n}\n\nexport interface IAssetState {\n  readonly loading: boolean\n  readonly errors?: string\n  readonly items: {[id: string]: IAssetPayload}\n}\n\nconst initialState: IAssetState = {\n  errors: undefined,\n  loading: false,\n  items: {}\n};\n\nexport const asset: Reducer<IAssetState> = (\n  state: IAssetState = initialState,\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case AssetActionTypes.FETCH_START: {\n      return { ...state, loading: true, errors: undefined };\n    }\n    case AssetActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, errors: undefined, items: clone(state.items) }\n    }\n    case AssetActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default asset;\n","import { Reducer, AnyAction } from 'redux';\n\nimport { ICommonContentListPayload } from '../../models/common';\nimport { ContactActionTypes } from './actions';\nimport { IContactPayload } from '../../models/contact';\n\nexport interface IContactState extends ICommonContentListPayload<IContactPayload> {\n  readonly loading: boolean;\n  readonly errors?: string;\n}\n\nconst initialState: IContactState = {\n  total: 0,\n  skip: 0,\n  limit: 0,\n  items: [],\n  errors: undefined,\n  loading: false\n};\n\nexport const blog: Reducer<IContactState> = (\n  state: IContactState = initialState,\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case ContactActionTypes.FETCH_START: {\n      return { ...state, loading: true, errors: undefined };\n    }\n    case ContactActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, errors: undefined, ...action.payload };\n    }\n    case ContactActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default blog;\n","import { combineReducers } from 'redux'\n\nimport blog, { IBlogState } from './blog/reducer'\nimport ability, { IAbilityState } from './ability/reducer'\nimport education, { IEducationState } from './education/reducer'\nimport experiance, { IExperianceState } from './experiance/reducer'\nimport folio, { IFolioState } from './folio/reducer'\nimport metadata, { IMetadataState } from './metadata/reducer'\nimport assets, { IAssetState } from './assets/reducer'\nimport contact, { IContactState } from './contact/reducer'\nimport { connectRouter } from 'connected-react-router'\n\nexport interface IState {\n    blog: IBlogState\n    ability: IAbilityState\n    education: IEducationState\n    experiance: IExperianceState\n    folio: IFolioState\n    metadata: IMetadataState\n    assets: IAssetState\n    contact: IContactState\n    router: any\n}\n\nconst rootReducers = (history: any) => combineReducers<IState>({\n    blog,\n    ability,\n    education,\n    experiance,\n    folio,\n    metadata,\n    assets,\n    contact,\n    router: connectRouter(history)\n});\n\nexport default rootReducers;","export const isServerRender = (typeof window === 'undefined');\nexport const isProduction = process.env.NODE_ENV === 'production';\n","import { createStore, combineReducers, applyMiddleware, Store, Middleware } from 'redux';\nimport createSaga, { END, SagaMiddleware } from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { routerMiddleware } from 'connected-react-router'\n\nimport rootReducers from '../core/reducers';\nimport { isServerRender } from '../utils';\n\nexport default (history: any, reduxState = undefined) => {\n\n  //\n  console.log('Is this a server side render');\n  console.log(isServerRender)\n\n  // Compose our middlewares\n  const saga: SagaMiddleware = createSaga();\n  const router: Middleware = routerMiddleware(history);\n\n  // Compose with dev tools\n  const enhancer = composeWithDevTools(applyMiddleware(saga, router));\n\n  // Create our store\n  const store: Store = createStore(\n    rootReducers(history),\n    reduxState,\n    enhancer\n  );\n\n  // TODO: This needs to be properly types\n  (store as any).runSaga = saga.run;\n  (store as any).closeSagas = () => store.dispatch(END);\n\n  // TODO: Cleanup\n  if ((module as any).hot) {\n    // Enable Webpack hot module replacement for reducers\n    (module as any).hot.accept('../core/reducers', () => {\n      const nextReducers = require('../core/reducers');\n      const rootReducer = combineReducers({\n        ...nextReducers,\n      });\n      store.replaceReducer(rootReducer);\n    });\n  }\n\n  return store;\n};","import * as React from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst isExternalLink = (path: string) => {\n  return path.includes('http')\n}\n\nexport type IProps = {\n  to: string\n}\n\nexport const Link: React.SFC<IProps> = ({ to, children }) => (\n  isExternalLink(to) \n    ? <a href={to}>{children}</a>\n    : <RouterLink to={to}>{children}</RouterLink>\n);\n\nexport default Link;\n","import * as React from \"react\";\nimport classnames from \"classnames\";\n\nimport { Link } from \"../../common/link/link\"\nimport * as styles from \"./profile.css\";\nimport { IMetadataPayload } from \"../../../models/metadata\";\n\ninterface StateProps {\n  metadata: IMetadataPayload;\n}\ninterface ActionProps {}\ninterface SelectorProps {}\n\ntype Props = StateProps & ActionProps & SelectorProps;\n\nexport const Profile: React.SFC<Props> = ({ metadata }) => (\n  <div className={classnames(styles[\"Header\"])}>\n      <div className={classnames(styles[\"Header--Photo\"], styles['Link--left'])}>\n        <Link to={'/'}>\n          <img src=\"//media.fandanzle.co.uk/avatar.png\" alt=\"avatar\" />\n        </Link>\n      </div>\n\n      <span className={classnames(styles['Link'], styles['Link--left'])}><Link to={'/'}>Home</Link></span>\n      <span className={classnames(styles['Link'], styles['Link--left'])}><Link to={'/blog'}>Blog</Link></span>\n      <div className={styles['Clear']} />\n  </div>\n);\n\nexport default Profile;\n","import { prop, pipe, propOr } from 'ramda';\n\nimport { IMetadataState } from './reducer';\nimport { IState } from '../reducers';\n\nexport const getMetadata = (state: IState): IMetadataState => prop('metadata', state);\n\nexport const getMetadataTitle = pipe(\n    getMetadata,\n    prop('title')\n)\n\nexport const getMetadataBlurb = pipe(\n    getMetadata,\n    prop('blurb')\n)\n\nexport const getMetadataSummary = pipe(\n    getMetadata,\n    prop('summary')\n)\n\n\nexport const getMetadataItemLoading = pipe(\n    getMetadata,\n    prop('loading')\n)\n\nexport const getMetadataItemErrors = pipe(\n    getMetadata,\n    propOr(undefined, 'errors')\n)\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Profile } from '../../components/profile/profile';\n\nimport { IHeaderProps } from './header.state';\n\nimport { mapDispatchToProps, mapStateToProps } from './header.state';\n\nexport class HeaderView extends Component<IHeaderProps, {}> {\n\n    render() {\n        const { metadata } = this.props\n        return(\n            <Fragment>\n                <Profile metadata={metadata} />\n            </Fragment>\n        )\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(HeaderView);\n","import { fetchRequest } from '../../../core/actions'\n\nimport { ICommonFields } from '../../../models/common'\nimport { IBlogPostPayload } from '../../../models/blog'\nimport { getBlogItems } from '../../../core/blog/selectors';\nimport { IMetadataPayload } from '../../../models/metadata';\nimport { getMetadata } from '../../../core/metadata/selectors';\n\nexport type IStateProps = {\n    metadata: IMetadataPayload;\n}\n\nexport type IActionProps = {\n    onFetchAction(): void,\n}\n\nexport type IHeaderProps = IStateProps & IActionProps;\n\nexport const mapStateToProps = (state: any): IStateProps => ({\n    metadata: getMetadata(state)\n});\n\nexport const mapDispatchToProps = (dispatch: any): IActionProps => ({\n    onFetchAction: () => dispatch(fetchRequest()),\n});\n","import * as React from \"react\";\nimport classnames from \"classnames\";\n\nimport * as commonStyles from \"../../style/common.css\";\nimport { IMetadataPayload } from \"../../../models/metadata\";\n\ninterface StateProps {\n  metadata: IMetadataPayload;\n}\ninterface ActionProps {}\ninterface SelectorProps {}\n\ntype Props = StateProps & ActionProps & SelectorProps;\n\nexport const About: React.SFC<Props> = ({ metadata }) => (\n  <div className={classnames(commonStyles[\"Block\"])}>\n    <h2>About me</h2>\n    <p>\n      {metadata.summary}\n    </p>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport * as s from \"./favicon.css\"\n\n\n\nconst iconSelector = (name: string) => {\n  switch (name) {\n    case 'linked':\n        return {\n            path: `M19 3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14m-.5 \n            15.5v-5.3a3.26 3.26 0 0 0-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 \n            1.39-1.4a1.4 1.4 0 0 1 1.4 1.4v4.93h2.79M6.88 8.56a1.68 1.68 0 0 0 1.68-1.68c0-.93-.75-1.69-1.68-1.69a1.69 \n            1.69 0 0 0-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37h2.77z\n            `,\n            viewBox: '0 0 24 24',\n            rotate: 0,\n        };\n    case 'github':\n        return {\n            path: `M5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4.438c-.321-.073-.33-.68-.33-.894l.01-2.469c0-.84-.288-1.389-.61-1.666 \n            2.004-.223 4.109-.984 4.109-4.441 0-.983-.348-1.786-.925-2.415.092-.228.401-1.143-.09-2.382 0 0-.754-.242-2.473.922A8.63 \n            8.63 0 0 0 12 7.352a8.62 8.62 0 0 0-2.253.303c-1.72-1.164-2.474-.922-2.474-.922-.49 1.239-.182 2.154-.089 2.381a3.479 \n            3.479 0 0 0-.926 2.415c0 3.45 2.1 4.222 4.1 4.449-.258.225-.49.621-.572 1.203-.513.23-1.817.627-2.62-.748 0 \n            0-.475-.864-1.378-.928 0 0-.88-.01-.062.548 0 0 .59.276 1 1.316 0 0 .528 1.75 3.031 1.207l.012 \n            1.53c0 .213-.015.825-.34.894H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z\n            `,\n            viewBox: '0 0 24 24',\n            rotate: 0,\n        };\n    case 'home':\n      return {\n          path: `M4 8l8 5l8-5l-8-5l-8 5m18 0v10a2 2 0 0 1-2 2H4a2 2 0 0 \n          1-2-2V8c0-.73.39-1.36.97-1.71L12 .64l9.03 5.65c.58.35.97.98.97 1.71z\n          `,\n          viewBox: '0 0 24 24',\n          rotate: 0,\n      };\n    case 'email':\n        return {\n            path: `M4 8l8 5l8-5l-8-5l-8 5m18 0v10a2 2 0 0 1-2 2H4a2 2 0 0 \n            1-2-2V8c0-.73.39-1.36.97-1.71L12 .64l9.03 5.65c.58.35.97.98.97 1.71z\n            `,\n            viewBox: '0 0 24 24',\n            rotate: 0,\n        };\n    case 'blog':\n        return {\n            path: `M14 13H9.95a1 1 0 0 0-1 1a1 1 0 0 0 1 1H14a1 1 0 0 0 1-1a1 1 0 0 0-1-1m-4.05-3h2.6a1 1 0 0 0 \n            1-1a1 1 0 0 0-1-1h-2.6a1 1 0 0 0-1 1a1 1 0 0 0 1 1M16 9v1a1 1 0 0 0 1 1a1 1 0 0 1 1 1v3a3 3 0 0 1-3 \n            3H9a3 3 0 0 1-3-3V8a3 3 0 0 1 3-3h4a3 3 0 0 1 3 3m4-6H4c-1.11 0-2 .89-2 2v16a2 2 0 0 0 2 2h16a2 2 0 \n            0 0 2-2V4a2 2 0 0 0-2-2z\n            `,\n            viewBox: '0 0 24 24',\n            rotate: 0,\n        };\n        case 'folio':\n            return {\n                path: `M3 5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5m3 \n                1v12h4v-2H8V8h2V6H6m10 10h-2v2h4V6h-4v2h2v8z\n                `,\n                viewBox: '0 0 24 24',\n                rotate: 0,\n            };\n    default:\n      return {\n        path: '',\n        viewBox: '',\n        rotate: '',\n      };\n  }\n};\n\nexport type IProps = {\n    className?: string,\n    name: string,\n    alt?: string,\n}\n\nexport const Favicon: React.SFC<IProps> = ({ className, name, alt }) => {\n  const iconMeta = iconSelector(name);\n  return (\n    <span className={className}>\n      <div\n        className={classnames(s.container, {\n          [s.deg90]: iconMeta.rotate === 1,\n          [s.deg180]: iconMeta.rotate === 2,\n          [s.deg270]: iconMeta.rotate === 3,\n        })}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox={iconMeta.viewBox}>\n          <path d={iconMeta.path} />\n        </svg>\n      </div>\n    </span>\n  );\n};\n\nexport default Favicon;","import * as React from 'react';\nimport classnames from 'classnames';\nimport { Favicon } from '../../common/favicon/favicon';\nimport { Link } from '../../common/link/link'\n\nimport * as commonStyles from '../../style/common.css'\nimport * as styles from './contact.css'\n\nimport { IContactPayload } from '../../../models/contact';\nimport { ICommonFields } from '../../../models/common';\n\ninterface IStateProps {\n    contactList: ICommonFields<IContactPayload>[]\n}\n  \ntype Props = IStateProps\n  \nexport const Contact: React.SFC<Props> = ({ contactList }) => (\n    <div className={classnames(commonStyles['Block'])}>\n        <h2>Contact</h2>\n        {contactList && contactList.map((item: ICommonFields<IContactPayload>, index: number)  => (\n            <div key={index} className={classnames(styles['ContactItem'])}>\n                <div className={classnames(styles['ContactItem--Title'])}>\n                    <Favicon name={item.fields.icon} />\n                    <Link to={item.fields.link || ''}>{item.fields.text}</Link>\n                </div>\n            </div>\n        ))}\n\n    </div>    \n);\n\nexport default Contact;\n","import * as React from 'react';\nimport classnames from 'classnames';\n\nimport { ICommonFields } from '../../../models/common';\nimport { IAbillityPayload } from '../../../models/abillity';\n\nimport * as styles from './skillz.css';\nimport * as commonStyles from '../../style/common.css';\n\nexport interface ISkillsValueProps {\n    values: string[]\n}\n\nexport const SkillzValue: React.SFC<ISkillsValueProps> = ({ values }) => (\n    <div>\n        {values.map((item: string, index: number) => {\n            return <span key={index} className={styles['Skill--Badge']}>{item}</span>\n        })}\n    </div>\n);\n\ninterface ISkillzProps {\n    abilitiesList: ICommonFields<IAbillityPayload>[]\n}\n\ntype Props = ISkillzProps\n\nexport const Skillz: React.SFC<Props> = ({ abilitiesList }) => (\n    <div className={classnames(commonStyles['Block'])}>\n        <h2>Skills</h2>\n        { abilitiesList.map( (item: ICommonFields<IAbillityPayload>, index: number)=> {\n            return (\n                <div key={index} className={styles['Item--Skills']}>\n                    <div className={styles['Skill']}>{item.fields.subject}</div>\n                    <SkillzValue values={item.fields.skills} />\n                </div>\n            )\n        })} \n    </div>\n);\n\nexport default Skillz;\n","import * as React from 'react';\nimport classnames from 'classnames';\nimport moment from 'moment'\n\nimport * as commonStyles from '../../style/common.css'\nimport * as styles from './experiance.css'\nimport { IExperiancePayload } from '../../../models/experiance';\nimport { ICommonFields } from '../../../models/common';\n\ninterface IStateProps {\n    experianceList: ICommonFields<IExperiancePayload>[]\n}\n\ntype Props = IStateProps\n\nexport const Experiance: React.SFC<Props> = ({ experianceList }) => (\n    <div className={classnames(commonStyles['Block'])}>\n        <h2>EXPERIENCE</h2>\n        {experianceList.map((item:  ICommonFields<IExperiancePayload>, index: number) => (\n            <section key={index} className={styles['Experiance']}>\n                <aside className={styles['Experiance--Year']}>\n                    <div>{moment(item.fields.startDate).format('YYYY')} - {moment(item.fields.endDate).format('YYYY')}</div>\n                </aside>\n                <div className={styles['Experiance--Description']}>\n                    <h3>{item.fields.company}</h3>\n                    <p>{item.fields.description}</p>\n                </div>\n            </section>\n        ))}\n    </div>\n);\n\nexport default Experiance;\n\n","import * as React from \"react\";\nimport classnames from \"classnames\";\nimport moment from 'moment'\n\nimport { IEducationPayload } from \"../../../models/education\";\nimport { ICommonFields } from \"../../../models/common\";\n\nimport * as commonStyles from \"../../style/common.css\";\nimport * as styles from \"./education.css\";\n\ninterface IStateProps {\n  educationList: ICommonFields<IEducationPayload>[]\n}\n\ntype Props = IStateProps\n\nexport const Education: React.SFC<Props> = ({ educationList }) => (\n  <div className={classnames(commonStyles['Block'])}>\n      <h2>EXPERIENCE</h2>\n      {educationList.map((item:  ICommonFields<IEducationPayload>, index: number) => (\n          <section key={index} className={styles['Education']}>\n              <aside className={styles['Education--Year']}>\n                  <div>{moment(item.fields.startDate).format('YYYY')} - {moment(item.fields.endDate).format('YYYY')}</div>\n              </aside>\n              <div className={styles['Education--Description']}>\n                  <h3>{item.fields.institute}</h3>\n                  <p>{item.fields.subject}</p>\n              </div>\n              <div>\n                    {item.fields.qualifications.map((qualification) => {\n                        <p>{qualification}</p>\n                    })}\n              </div>\n          </section>\n      ))}\n  </div>\n);\n\nexport default Education;\n","import { prop, pipe, propOr } from 'ramda';\n\nimport { IAbilityState } from './reducer';\nimport { IState } from '../reducers';\n\nexport const getAbility = (state: IState): IAbilityState => prop('ability', state);\n\nexport const getAbilityItems = pipe(\n    getAbility,\n    prop('items'),\n)\n\nexport const getAbilityItemsLoading = pipe(\n    getAbility,\n    prop('loading')\n)\n\nexport const getAbilityItemsErrors = pipe(\n    getAbility,\n    propOr(undefined, 'errors')\n)\n","import { prop, pipe, propOr } from 'ramda';\n\nimport { IExperianceState } from './reducer';\nimport { IState } from '../reducers';\n\nexport const getExperiance = (state: IState): IExperianceState => prop('experiance', state);\n\nexport const getExperianceItems = pipe(\n    getExperiance,\n    prop('items')\n)\n\nexport const getExperianceItemsLoading = pipe(\n    getExperiance,\n    prop('loading')\n)\n\nexport const getExperianceItemsErrors = pipe(\n    getExperiance,\n    propOr(undefined, 'errors')\n)\n","import { prop, pipe, propOr } from 'ramda';\n\nimport { IEducationState } from './reducer';\nimport { IState } from '../reducers';\n\nexport const getEducation = (state: IState): IEducationState => prop('education', state);\n\nexport const getEducationItems = pipe(\n    getEducation,\n    prop('items')\n)\n\nexport const getEducationItemsLoading = pipe(\n    getEducation,\n    prop('loading')\n)\n\nexport const getEducationItemsErrors = pipe(\n    getEducation,\n    propOr(undefined, 'errors')\n)\n","import { prop, pipe, propOr } from 'ramda';\n\nimport { IBlogState } from './reducer';\nimport { IState } from '../reducers';\n\nexport const getBlog = (state: IState): IBlogState => prop('blog', state);\n\nexport const getBlogItems = pipe(\n    getBlog,\n    prop('items')\n)\n\nexport const getBlogItemsLoading = pipe(\n    getBlog,\n    prop('loading')\n)\n\nexport const getBlogItemsErrors = pipe(\n    getBlog,\n    propOr(undefined, 'errors')\n)\n","import { prop } from 'ramda';\n\nimport { IFolioState } from './reducer';\nimport { IState } from '../reducers';\n\nexport const getFolio = (state: IState) => prop('folio', state);\n\nexport const getFolioItems = (state: IFolioState) => prop('items', state);\nexport const getFolioItemsErrors = (state: IFolioState) => prop('errors', state);\nexport const getFolioItemsLoading = (state: IFolioState) => prop('loading', state);\n","import { prop, pipe, propOr } from 'ramda';\n\nimport { IContactState } from './reducer';\nimport { IState } from '../reducers';\n\nexport const getContact = (state: IState): IContactState => prop('contact', state);\n\nexport const getContactItems = pipe(\n    getContact,\n    prop('items')\n)\n\nexport const getContactItemsLoading = pipe(\n    getContact,\n    prop('loading')\n)\n\nexport const getContactItemsErrors = pipe(\n    getContact,\n    propOr(undefined, 'errors')\n)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport About from '../../components/about/about';\nimport Contact from '../../components/contact/contact';\nimport Skillz from '../../components/skillz/skillz';\nimport Experiance from '../../components/experiance/experiance';\nimport Education from '../../components/education/education';\n\nimport { IHomeComponentProps } from './home.state';\nimport { mapDispatchToProps, mapStateToProps } from './home.state';\n\nimport * as homeStyles from \"./home.css\"\n\nexport class HomeView extends Component<IHomeComponentProps, {}> {\n\n    render() {\n        const { abilityItems, educationItems, experianceItems, metadata, contactItems } = this.props\n        return(\n            <div className={homeStyles['Content']}>\n                <aside className={homeStyles['Description']}>\n                    <About metadata={metadata}/>\n                    <Experiance experianceList={experianceItems} />\n                    <Education educationList={educationItems} />\n                </aside>\n                <aside className={homeStyles['Breakdown']}>\n                    <Skillz abilitiesList={abilityItems} />\n                    <Contact contactList={contactItems}/>\n                </aside>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(HomeView);\n","import { fetchRequest } from '../../../core/actions'\n\nimport { ICommonFields } from '../../../models/common'\nimport { IBlogPostPayload } from '../../../models/blog';\nimport { IAbillityPayload } from '../../../models/abillity';\nimport { IExperiancePayload } from '../../../models/experiance';\nimport { IEducationPayload } from '../../../models/education';\nimport { IFolioPayload } from '../../../models/folio';\n\nimport { getAbilityItems } from '../../../core/ability/selectors';\nimport { getExperianceItems } from '../../../core/experiance/selectors';\nimport { getEducationItems } from '../../../core/education/selectors';\nimport { getBlogItems } from '../../../core/blog/selectors';\nimport { getFolioItems } from '../../../core/folio/selectors';\nimport { getMetadata } from '../../../core/metadata/selectors';\nimport { IMetadataPayload } from '../../../models/metadata';\n\nimport { IContactPayload } from '../../../models/contact';\nimport { getContactItems } from '../../../core/contact/selectors';\n\nexport type IStateProps = {\n    title?: string,\n    blogItems: ICommonFields<IBlogPostPayload>[];\n    abilityItems: ICommonFields<IAbillityPayload>[];\n    experianceItems: ICommonFields<IExperiancePayload>[];\n    educationItems: ICommonFields<IEducationPayload>[];\n    contactItems: ICommonFields<IContactPayload>[];\n    folioList: ICommonFields<IFolioPayload>[];\n    metadata: IMetadataPayload;\n}\n\nexport type IActionProps = {\n    onFetchAction(): void,\n}\n\nexport type IHomeComponentProps = IStateProps & IActionProps;\n\nexport const mapStateToProps = (state: any): IStateProps => ({\n    title: \"This is a title\",\n    blogItems: getBlogItems(state),\n    abilityItems: getAbilityItems(state),\n    experianceItems:  getExperianceItems(state),\n    educationItems: getEducationItems(state),\n    folioList: getFolioItems(state),\n    metadata: getMetadata(state),\n    contactItems: getContactItems(state)\n});\n\nexport const mapDispatchToProps = (dispatch: any): IActionProps => ({\n    onFetchAction: () => dispatch(fetchRequest()),\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { IBlogComponentProps, mapDispatchToProps, mapStateToProps } from './blog.state';\n\nimport * as blogStyles from \"./blog.css\"\n\nexport type IProps = {\n    to: string\n}\n\nexport const blockType = ( content: any, marks?: []) => {\n    const codeMark = marks && marks.find((dd: any) => dd?.type === 'code');\n    const codeBold = marks && marks.find((dd: any) => dd?.type === 'bold');\n    if(!content) return <Fragment></Fragment>;\n    if(codeMark) return (<pre className={blogStyles[\"Block--Code\"]}>{content}</pre>);\n    if(codeBold) return (<b>{content}</b>);\n    return (<span>{content}</span>);\n}\n\nexport class BlogView extends Component<IBlogComponentProps, {}> {\n    componentWillMount() {\n        const { onFetchAction } = this.props\n        onFetchAction();\n    }\n    render() {\n        const { blogItems } = this.props;\n        return(\n            <div className={blogStyles.InnerContainer}>\n                <div>\n                    {blogItems.map(item => {\n                        return (\n                            <div className={blogStyles['Entry--Container']}>\n                                <h1 className={blogStyles[\"Entry--Header\"]}>{item?.fields?.title ?? \"\"}</h1>\n                                <div>\n                                    {item?.fields?.blogContent?.content && \n                                        item?.fields?.blogContent?.content?.map(payload => \n                                            (<p>\n                                                {payload?.content && payload?.content.map(subItem => blockType(subItem?.value, subItem?.marks))}\n                                            </p>)\n                                        )}\n                                    </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(BlogView);\n","import { fetchRequest } from '../../../core/blog/actions'\n\nimport { ICommonFields } from '../../../models/common'\nimport { IBlogPostPayload } from '../../../models/blog'\nimport { getBlogItems } from '../../../core/blog/selectors';\nimport { IMetadataPayload } from '../../../models/metadata';\nimport { getMetadata } from '../../../core/metadata/selectors';\n\nexport type IStateProps = {\n    title?: string,\n    blogItems: ICommonFields<IBlogPostPayload>[];\n    metadata: IMetadataPayload;\n}\n\nexport type IActionProps = {\n    onFetchAction(): void,\n}\n\nexport type IBlogComponentProps = IStateProps & IActionProps;\n\nexport const mapStateToProps = (state: any): IStateProps => ({\n    blogItems: getBlogItems(state),\n    metadata: getMetadata(state)\n});\n\nexport const mapDispatchToProps = (dispatch: any): IActionProps => ({\n    onFetchAction: () => dispatch(fetchRequest()),\n});\n","import React, { Component, Fragment } from 'react';\nimport { path } from 'ramda';\nimport { connect } from 'react-redux';\nimport { Profile } from '../../components/profile/profile';\n\nimport { INotFoundComponentProps } from './notFound.state';\n\nimport { mapDispatchToProps, mapStateToProps } from './notFound.state';\n\nimport * as styles from \"../../style/common.css\";\n\nexport class NotFoundView extends Component<INotFoundComponentProps, {}> {\n\n    render() {\n        const { metadata } = this.props\n        return(\n            <div>\n                <h2>:( Page not found</h2>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(NotFoundView);\n","import { fetchRequest } from '../../../core/actions'\n\nimport { IMetadataPayload } from '../../../models/metadata';\nimport { getMetadata } from '../../../core/metadata/selectors';\n\nexport type IStateProps = {\n    metadata: IMetadataPayload;\n}\n\nexport type IActionProps = {\n    onFetchAction(): void,\n}\n\nexport type INotFoundComponentProps = IStateProps & IActionProps;\n\nexport const mapStateToProps = (state: any): IStateProps => ({\n    metadata: getMetadata(state)\n});\n\nexport const mapDispatchToProps = (dispatch: any): IActionProps => ({\n    onFetchAction: () => dispatch(fetchRequest()),\n});\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Helmet } from 'react-helmet';\n\nimport HeaderViewContainer from './containers/header/header';\n\nimport HomeViewContainer from './pages/home/home';\nimport BlogViewContainer from './pages/blog/blog';\nimport NotFoundComponent from './pages/notFound/notFound';\n\nimport * as styles from \"./style/common.css\";\n\ninterface StateProps {}\ninterface ActionProps {}\ninterface SelectorProps {}\n\ntype Props = StateProps & ActionProps & SelectorProps\n\nclass AppRouter extends React.Component<Props> {\n  render() {\n    return (\n      <>\n        <Helmet>\n            <title>Devnotnull.com - Alex Brown Blog and Folio</title>\n            <meta name=\"description\" content=\"Devnotnull - The personal website of Alex Brown @stump201 @devisnotnull\" />\n            <meta name=\"og:title\" property=\"og:title\" content=\"Devnotnull - The personal website of Alex Brown @stump201 @devisnotnull\"/>\n            <meta property=\"og:type\" content=\"website\" />\n            <meta name=\"robots\" content=\"index, follow\" />\n        </Helmet>\n\n        <HeaderViewContainer/>\n        \n        <div className={styles['Container']}>\n          \n          <Switch>\n              <Route exact path=\"/\" component={HomeViewContainer} />\n              <Route exact path=\"/blog\" component={BlogViewContainer} />\n              <Route exact path=\"/blog/:id\" component={BlogViewContainer} />\n              <Route component={NotFoundComponent} />\n          </Switch>\n\n        </div>\n      </>\n    )\n  }\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from \"react-router-dom\";\nimport createHistory from 'history/createBrowserHistory';\n\nimport rootSaga from '../core/sagas';\nimport createStore from '../core/store'\nimport App from '../web/app';\n\n// Grab the state from a global variable injected into the server-generated HTML\nconst preloadedState = (window as any).__INITIAL_STATE__;\n\n// Create client store\nconst history = createHistory();\nconst store = createStore(history, preloadedState);\n\n(store as any).rootTask = (store as any).runSaga(rootSaga);\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter >\n        <App />\n      </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n  );\n}\n\n//\nrenderApp();\n\n// Server side rendering\nif ((module as any).hot) {\n  //\n  (module as any).hot.accept('../web/app', () => {\n    const newApp = require('../web/app').default;\n    renderApp();\n  });\n  //\n  (module as any).hot.accept('../core/sagas', () => {\n    (store as any).closeSagas();\n    (store as any).rootTask = (store as any).runSaga(require('../core/sagas').default);\n  });\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container--Large\":\"Container--Large3zPaz\",\"Container--Standard\":\"Container--Standard3ECso\",\"Container--Small\":\"Container--Small1ZAEI\",\"Align--Center\":\"Align--Center2E_7U\",\"Container\":\"Container3AC4w Container--Large3zPaz\",\"Block\":\"Block2xQDQ\",\"Clearfix\":\"Clearfix2je1f\",\"Navigation\":\"Navigation2sBjA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header3lKsu\",\"Header--Photo\":\"Header--Photoz4CTJ\",\"Text--Header\":\"Text--Header3Q8CQ\",\"Text-header\":\"Text-header2UiJT\",\"Header--Text\":\"Header--Text16K4o\",\"Description\":\"Description3aaFq\",\"Link\":\"Link4rVwC\",\"Link--left\":\"Link--left3DwKD\",\"Link--right\":\"Link--right2OVH7\",\"Link--active\":\"Link--active1kvCk\",\"Clear\":\"Clear2huoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container3W8ZI\",\"deg90\":\"deg902WDqT\",\"deg180\":\"deg1803B4YK\",\"deg270\":\"deg27016awR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InnerContainer\":\"InnerContainer2NZPI\",\"Entry--Container\":\"Entry--Container37tIp\",\"Entry--Header\":\"Entry--HeaderA2rJV\",\"Entry--Body\":\"Entry--Body29_CQ\",\"Block--Code\":\"Block--Code2zcDJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item--Skills\":\"Item--SkillsEpqhC\",\"Skill\":\"SkillgAlBU\",\"Skill-Items\":\"Skill-Items1ZxLF\",\"Skill--Badge\":\"Skill--Badge3IPgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Experiance\":\"Experiance3W3VS\",\"Experiance--Year\":\"Experiance--Year1-68R\",\"Experiance--Description\":\"Experiance--DescriptionLsjcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Education\":\"Education2_vZi\",\"Education--Year\":\"Education--Year2sdwq\",\"Education--Description\":\"Education--Description2lJYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"Image8Xc30\",\"Content\":\"Content3gapi\",\"Description\":\"Description2H1A1\",\"Breakdown\":\"BreakdownG99xy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem4VOwr\",\"ContactItem--Icon\":\"ContactItem--Icon28B3J\",\"fa\":\"fa3j15s\",\"ContactItem--Title\":\"ContactItem--Title2JyM6\",\"ContactItem--Title--Only\":\"ContactItem--Title--OnlysKv_5\",\"ContactItem--Description\":\"ContactItem--Description2lr2Y\"};"],"sourceRoot":""}